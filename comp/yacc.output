Terminals which are not used

   ID
   TRUE
   FALSE
   SYMBOL
   expr_1


Grammar

    0 $accept: program $end

    1 program: components

    2 components: components component
    3           | component

    4 component: class_interface
    5          | class_implementation
    6          | protocol

    7 class_interface: class_interface_header class_interface_body

    8 class_interface_header: AT_INTERFACE IDENTIFIER SEMI_COLUMN IDENTIFIER
    9                       | AT_INTERFACE IDENTIFIER error IDENTIFIER
   10                       | AT_INTERFACE IDENTIFIER SEMI_COLUMN
   11                       | AT_INTERFACE IDENTIFIER IDENTIFIER
   12                       | AT_INTERFACE IDENTIFIER

   13 class_interface_body: protocol_reference_list instance_variables interface_declaration_list AT_END
   14                     | protocol_reference_list instance_variables AT_END
   15                     | protocol_reference_list interface_declaration_list AT_END
   16                     | instance_variables interface_declaration_list AT_END
   17                     | protocol_reference_list AT_END
   18                     | instance_variables AT_END
   19                     | interface_declaration_list AT_END
   20                     | AT_END

   21 protocol_reference_list: LESS_THAN ids_list MORE_THAN

   22 ids_list: IDENTIFIER
   23         | ids_list error IDENTIFIER
   24         | ids_list COMMA IDENTIFIER

   25 instance_variables: OPEN_S instance_variable_declarations CLOSE_S
   26                   | OPEN_S instance_variable_declarations error
   27                   | OPEN_S instance_variable_declarations

   28 instance_variable_declarations: instance_variable_declarations instance_variable_declaration
   29                               | instance_variable_declaration
   30                               | variable_declaration_list

   31 instance_variable_declaration: visibility_specification variable_declaration_list

   32 variable_declaration_list: variable_declaration_list variable_declaration
   33                          | variable_declaration

   34 visibility_specification: AT_PRIVATE
   35                         | AT_PROTECTED
   36                         | AT_PUBLIC

   37 variable_declaration: type IDENTIFIER SEMI_COMA
   38                     | type IDENTIFIER error
   39                     | type IDENTIFIER EQUAL simple_expr SEMI_COMA
   40                     | type IDENTIFIER EQUAL simple_expr error
   41                     | CONST type IDENTIFIER SEMI_COMA
   42                     | CONST type IDENTIFIER error
   43                     | CONST type IDENTIFIER EQUAL simple_expr SEMI_COMA
   44                     | CONST type IDENTIFIER EQUAL simple_expr error
   45                     | Enum
   46                     | structrule
   47                     | ArrayOne
   48                     | ArrayN

   49 Enum: ENUM OPEN_S ids_list CLOSE_S IDENTIFIER SEMI_COMA
   50     | TYPEDEF ENUM OPEN_S ids_list CLOSE_S IDENTIFIER SEMI_COMA

   51 structrule: STRUCT IDENTIFIER OPEN_S variable_declarations CLOSE_S SEMI_COMA
   52           | STRUCT IDENTIFIER OPEN_S variable_declarations CLOSE_S ids_list SEMI_COMA

   53 variable_declarations: type IDENTIFIER SEMI_COMA
   54                      | variable_declarations type IDENTIFIER SEMI_COMA
   55                      | type IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA
   56                      | variable_declarations type IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA
   57                      | variable_declarations CONST type IDENTIFIER SEMI_COMA
   58                      | CONST type IDENTIFIER SEMI_COMA
   59                      | variable_declarations CONST type IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA
   60                      | CONST type IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA

   61 ArrayOne: type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR EQUAL OPEN_S CLOSE_S SEMI_COMA
   62         | type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR SEMI_COMA
   63         | type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR EQUAL OPEN_S array_body CLOSE_S SEMI_COMA
   64         | type IDENTIFIER OPEN_ARR CLOSE_ARR EQUAL OPEN_S array_body CLOSE_S SEMI_COMA

   65 array_body: array_body COMMA expr
   66           | expr
   67           | array_body COMMA OPEN_ARR INT_VAL CLOSE_ARR EQUAL expr
   68           | OPEN_ARR INT_VAL CLOSE_ARR EQUAL expr

   69 ArrayN: type IDENTIFIER Multi EQUAL OPEN_S CLOSE_S SEMI_COMA
   70       | type IDENTIFIER Multi SEMI_COMA
   71       | type IDENTIFIER Multi EQUAL OPEN_S array_body2 CLOSE_S SEMI_COMA

   72 Multi: OPEN_ARR INT_VAL CLOSE_ARR OPEN_ARR INT_VAL CLOSE_ARR
   73      | Multi OPEN_ARR INT_VAL CLOSE_ARR

   74 array_body2: OPEN_S array_body CLOSE_S
   75            | expr
   76            | array_body2 COMMA OPEN_S array_body CLOSE_S
   77            | array_body2 COMMA expr

   78 type: simple_type
   79     | complex_type

   80 simple_type: INT
   81            | CHAR
   82            | FLOAT
   83            | NSSTRING
   84            | VOID

   85 complex_type: IDENTIFIER MULTI

   86 interface_declaration_list: interface_declaration_list interface_declaration
   87                           | interface_declaration

   88 interface_declaration: class_method_declaration
   89                      | instance_method_declaration

   90 class_method_declaration: PLUS p_type method_selector SEMI_COMA
   91                         | PLUS p_type method_selector error
   92                         | PLUS method_selector SEMI_COMA
   93                         | PLUS method_selector error

   94 instance_method_declaration: MINUS p_type method_selector SEMI_COMA
   95                            | MINUS method_selector SEMI_COMA
   96                            | MINUS p_type method_selector error
   97                            | MINUS method_selector error

   98 p_type: OPEN_P type CLOSE_P
   99       | error type CLOSE_P
  100       | OPEN_P type error

  101 @1: /* empty */

  102 method_selector: IDENTIFIER SEMI_COLUMN @1 parameter_list
  103                | IDENTIFIER

  104 parameter_list: parameter_list SEMI_COLUMN parameter
  105               | parameter_list IDENTIFIER SEMI_COLUMN parameter
  106               | parameter_list IDENTIFIER error parameter
  107               | parameter_list IDENTIFIER parameter
  108               | parameter

  109 parameter: p_type IDENTIFIER

  110 class_implementation: class_implementation_header class_implementation_body

  111 class_implementation_header: AT_IMPLEMENTATION IDENTIFIER SEMI_COLUMN IDENTIFIER
  112                            | AT_IMPLEMENTATION IDENTIFIER error IDENTIFIER
  113                            | AT_IMPLEMENTATION IDENTIFIER IDENTIFIER
  114                            | AT_IMPLEMENTATION IDENTIFIER

  115 class_implementation_body: instance_variables implementation_definition_list AT_END
  116                          | instance_variables AT_END
  117                          | implementation_definition_list AT_END

  118 implementation_definition_list: implementation_definition_list implementation_definition
  119                               | implementation_definition

  120 implementation_definition: class_implementation_definition
  121                          | instance_implementation_definition

  122 class_implementation_definition: class_implementation_definition_header block_body

  123 class_implementation_definition_header: PLUS p_type method_selector
  124                                       | PLUS method_selector

  125 instance_implementation_definition: instance_implementation_definition_header block_body

  126 instance_implementation_definition_header: MINUS p_type method_selector
  127                                          | MINUS method_selector

  128 statement_list: statement_list statement
  129               | statement

  130 statement: loop_statement
  131          | conditional_statement
  132          | expr SEMI_COMA
  133          | variable_declaration

  134 @2: /* empty */

  135 statement: @2 block_body
  136          | return_statement

  137 return_statement: RETURN expr SEMI_COMA
  138                 | RETURN expr error

  139 loop_statement: for_loop
  140               | while_loop
  141               | do_while_loop

  142 for_loop: for_loop_header statement

  143 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  144                | FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr error
  145                | FOR for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  146                | FOR error for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  147                | FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  148                | FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr error
  149                | FOR SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  150                | FOR error SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  151                | FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  152                | FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  153                | FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  154                | FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  155                | FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  156                | FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P

  157 for_initializer: INT IDENTIFIER EQUAL expr
  158                | INT IDENTIFIER expr
  159                | INT IDENTIFIER error expr
  160                | IDENTIFIER EQUAL expr
  161                | IDENTIFIER expr
  162                | IDENTIFIER error expr
  163                | IDENTIFIER

  164 logic_expr: expr LESS_THAN expr
  165           | expr MORE_THAN expr
  166           | expr LESS_OR_EQUAL expr
  167           | expr MORE_OR_EQUAL expr
  168           | expr EQUAL_EQUAL expr
  169           | NOT_EQUAL expr
  170           | OPEN_P logic_expr CLOSE_P
  171           | logic_expr AND_AND logic_expr
  172           | logic_expr OR_OR logic_expr

  173 expr: assign_expr
  174     | simple_expr

  175 logic_expr2: expr2 LESS_THAN expr2
  176            | expr2 MORE_THAN expr2
  177            | expr2 LESS_OR_EQUAL expr2
  178            | expr2 MORE_OR_EQUAL expr2
  179            | expr2 EQUAL_EQUAL expr2
  180            | NOT_EQUAL expr2
  181            | OPEN_P logic_expr2 CLOSE_P
  182            | logic_expr2 AND_AND logic_expr2
  183            | logic_expr2 OR_OR logic_expr2
  184            | error expr2
  185            | OPEN_P logic_expr2 error
  186            | error logic_expr2 CLOSE_P

  187 expr2: simple_expr

  188 assign_expr: long_id EQUAL simple_expr

  189 long_id: long_id DOT IDENTIFIER
  190        | message_call
  191        | IDENTIFIER

  192 simple_expr: STRING_VAL
  193            | INT_VAL
  194            | FLOAT_VAL
  195            | CHAR_VAL
  196            | long_id
  197            | simple_expr PLUS simple_expr
  198            | simple_expr MINUS simple_expr
  199            | simple_expr MULTI simple_expr
  200            | simple_expr DIV simple_expr
  201            | OPEN_P simple_expr CLOSE_P
  202            | p_type simple_expr

  203 block_body: OPEN_S statement_list CLOSE_S
  204           | OPEN_S CLOSE_S

  205 while_loop: while_loop_header statement

  206 while_loop_header: WHILE OPEN_P logic_expr CLOSE_P
  207                  | WHILE OPEN_P logic_expr error
  208                  | WHILE logic_expr CLOSE_P
  209                  | WHILE error logic_expr CLOSE_P

  210 do_while_loop: DO statement while_loop_header SEMI_COMA

  211 conditional_statement: if_header statement
  212                      | if_header statement ELSE statement
  213                      | switch

  214 switch: SWITCH OPEN_P switch_statement CLOSE_P OPEN_S switch_body CLOSE_S
  215       | SWITCH error switch_statement CLOSE_P OPEN_S switch_body CLOSE_S
  216       | SWITCH OPEN_P switch_statement error OPEN_S switch_body CLOSE_S
  217       | SWITCH OPEN_P switch_statement CLOSE_P OPEN_S switch_body error
  218       | SWITCH OPEN_P switch_statement CLOSE_P error switch_body CLOSE_S

  219 switch_body: CASE OPEN_P case_statement CLOSE_P SEMI_COLUMN statement BREAK SEMI_COMA switch_body
  220            | CASE OPEN_P case_statement CLOSE_P SEMI_COLUMN statement error SEMI_COMA switch_body
  221            | DEFAULT SEMI_COLUMN statement BREAK SEMI_COMA
  222            | DEFAULT SEMI_COLUMN statement error SEMI_COMA

  223 switch_statement: logic_expr
  224                 | expr

  225 case_statement: logic_expr2
  226               | expr2

  227 if_header: IF OPEN_P logic_expr CLOSE_P
  228          | IF OPEN_P logic_expr error
  229          | IF logic_expr CLOSE_P
  230          | IF error logic_expr CLOSE_P

  231 message_call: OPEN_ARR sender message CLOSE_ARR

  232 sender: message_call
  233       | IDENTIFIER

  234 message: IDENTIFIER
  235        | IDENTIFIER SEMI_COLUMN argument_list

  236 argument_list: argument_list argument
  237              | argument

  238 argument: SEMI_COLUMN simple_expr
  239         | error simple_expr
  240         | IDENTIFIER SEMI_COLUMN simple_expr
  241         | IDENTIFIER simple_expr
  242         | IDENTIFIER error simple_expr

  243 protocol: protocol_header protocol_body

  244 protocol_header: AT_PROTOCOL IDENTIFIER

  245 protocol_body: protocol_reference_list interface_declaration_list AT_END
  246              | interface_declaration_list AT_END
  247              | protocol_reference_list AT_END
  248              | AT_END


Terminals, with rules where they appear

$end (0) 0
error (256) 9 23 26 38 40 42 44 91 93 96 97 99 100 106 112 138 144
    146 148 150 159 162 184 185 186 207 209 215 216 217 218 220 222
    228 230 239 242
AT_INTERFACE (258) 8 9 10 11 12
IDENTIFIER (259) 8 9 10 11 12 22 23 24 37 38 39 40 41 42 43 44 49 50
    51 52 53 54 55 56 57 58 59 60 61 62 63 64 69 70 71 85 102 103 105
    106 107 109 111 112 113 114 157 158 159 160 161 162 163 189 191
    233 234 235 240 241 242 244
SEMI_COLUMN (260) 8 10 55 56 59 60 102 104 105 111 219 220 221 222
    235 238 240
NSSTRING (261) 83
FLOAT (262) 82
CHAR (263) 81
INT (264) 80 157 158 159
SEMI_COMA (265) 37 39 41 43 49 50 51 52 53 54 55 56 57 58 59 60 61
    62 63 64 69 70 71 90 92 94 95 132 137 143 144 145 146 147 148 149
    150 151 152 153 154 155 156 210 219 220 221 222
ID (266)
AT_PUBLIC (267) 36
AT_PROTECTED (268) 35
AT_PRIVATE (269) 34
OPEN_S (270) 25 26 27 49 50 51 52 61 63 64 69 71 74 76 203 204 214
    215 216 217
CLOSE_S (271) 25 49 50 51 52 61 63 64 69 71 74 76 203 204 214 215 216
    218
COMMA (272) 24 65 67 76 77
LESS_THAN (273) 21 164 175
MORE_THAN (274) 21 165 176
AT_END (275) 13 14 15 16 17 18 19 20 115 116 117 245 246 247 248
CONST (276) 41 42 43 44 57 58 59 60
VOID (277) 84
PLUS (278) 90 91 92 93 123 124 197
MINUS (279) 94 95 96 97 126 127 198
OPEN_P (280) 98 100 143 144 147 148 151 152 153 154 155 156 170 181
    185 201 206 207 214 216 217 218 219 220 227 228
CLOSE_P (281) 98 99 143 145 146 147 149 150 151 152 153 154 155 156
    170 181 186 201 206 208 209 214 215 217 218 219 220 227 229 230
AT_IMPLEMENTATION (282) 111 112 113 114
AND_AND (283) 171 182
OR_OR (284) 172 183
STRING_VAL (285) 192
FLOAT_VAL (286) 194
LESS_OR_EQUAL (287) 166 177
CHAR_VAL (288) 195
INT_VAL (289) 61 62 63 67 68 72 73 193
MORE_OR_EQUAL (290) 167 178
MULTI (291) 85 199
EQUAL_EQUAL (292) 168 179
NOT_EQUAL (293) 169 180
FOR (294) 143 144 145 146 147 148 149 150 151 152 153 154 155 156
EQUAL (295) 39 40 43 44 61 63 64 67 68 69 71 157 160 188
DIV (296) 200
WHILE (297) 206 207 208 209
IF (298) 227 228 229 230
OPEN_ARR (299) 61 62 63 64 67 68 72 73 231
CLOSE_ARR (300) 61 62 63 64 67 68 72 73 231
TRUE (301)
FALSE (302)
RETURN (303) 137 138
AT_PROTOCOL (304) 244
DO (305) 210
DOT (306) 189
SYMBOL (307)
SWITCH (308) 214 215 216 217 218
BREAK (309) 219 221
DEFAULT (310) 221 222
CASE (311) 219 220
STRUCT (312) 51 52
TYPEDEF (313) 50
ENUM (314) 49 50
if_h (315)
ELSE (316) 212
expr_1 (317)
p_type_expr_prec (318)
long_id_prec (319)


Nonterminals, with rules where they appear

$accept (65)
    on left: 0
program (66)
    on left: 1, on right: 0
components (67)
    on left: 2 3, on right: 1 2
component (68)
    on left: 4 5 6, on right: 2 3
class_interface (69)
    on left: 7, on right: 4
class_interface_header (70)
    on left: 8 9 10 11 12, on right: 7
class_interface_body (71)
    on left: 13 14 15 16 17 18 19 20, on right: 7
protocol_reference_list (72)
    on left: 21, on right: 13 14 15 17 245 247
ids_list (73)
    on left: 22 23 24, on right: 21 23 24 49 50 52
instance_variables (74)
    on left: 25 26 27, on right: 13 14 16 18 115 116
instance_variable_declarations (75)
    on left: 28 29 30, on right: 25 26 27 28
instance_variable_declaration (76)
    on left: 31, on right: 28 29
variable_declaration_list (77)
    on left: 32 33, on right: 30 31 32
visibility_specification (78)
    on left: 34 35 36, on right: 31
variable_declaration (79)
    on left: 37 38 39 40 41 42 43 44 45 46 47 48, on right: 32 33 133
Enum (80)
    on left: 49 50, on right: 45
structrule (81)
    on left: 51 52, on right: 46
variable_declarations (82)
    on left: 53 54 55 56 57 58 59 60, on right: 51 52 54 56 57 59
ArrayOne (83)
    on left: 61 62 63 64, on right: 47
array_body (84)
    on left: 65 66 67 68, on right: 63 64 65 67 74 76
ArrayN (85)
    on left: 69 70 71, on right: 48
Multi (86)
    on left: 72 73, on right: 69 70 71 73
array_body2 (87)
    on left: 74 75 76 77, on right: 71 76 77
type (88)
    on left: 78 79, on right: 37 38 39 40 41 42 43 44 53 54 55 56 57
    58 59 60 61 62 63 64 69 70 71 98 99 100
simple_type (89)
    on left: 80 81 82 83 84, on right: 78
complex_type (90)
    on left: 85, on right: 79
interface_declaration_list (91)
    on left: 86 87, on right: 13 15 16 19 86 245 246
interface_declaration (92)
    on left: 88 89, on right: 86 87
class_method_declaration (93)
    on left: 90 91 92 93, on right: 88
instance_method_declaration (94)
    on left: 94 95 96 97, on right: 89
p_type (95)
    on left: 98 99 100, on right: 90 91 94 96 109 123 126 202
method_selector (96)
    on left: 102 103, on right: 90 91 92 93 94 95 96 97 123 124 126
    127
@1 (97)
    on left: 101, on right: 102
parameter_list (98)
    on left: 104 105 106 107 108, on right: 102 104 105 106 107
parameter (99)
    on left: 109, on right: 104 105 106 107 108
class_implementation (100)
    on left: 110, on right: 5
class_implementation_header (101)
    on left: 111 112 113 114, on right: 110
class_implementation_body (102)
    on left: 115 116 117, on right: 110
implementation_definition_list (103)
    on left: 118 119, on right: 115 117 118
implementation_definition (104)
    on left: 120 121, on right: 118 119
class_implementation_definition (105)
    on left: 122, on right: 120
class_implementation_definition_header (106)
    on left: 123 124, on right: 122
instance_implementation_definition (107)
    on left: 125, on right: 121
instance_implementation_definition_header (108)
    on left: 126 127, on right: 125
statement_list (109)
    on left: 128 129, on right: 128 203
statement (110)
    on left: 130 131 132 133 135 136, on right: 128 129 142 205 210
    211 212 219 220 221 222
@2 (111)
    on left: 134, on right: 135
return_statement (112)
    on left: 137 138, on right: 136
loop_statement (113)
    on left: 139 140 141, on right: 130
for_loop (114)
    on left: 142, on right: 139
for_loop_header (115)
    on left: 143 144 145 146 147 148 149 150 151 152 153 154 155 156
   , on right: 142
for_initializer (116)
    on left: 157 158 159 160 161 162 163, on right: 143 144 145 146
    151 152 153
logic_expr (117)
    on left: 164 165 166 167 168 169 170 171 172, on right: 143 144
    145 146 147 148 149 150 152 154 170 171 172 206 207 208 209 223
    227 228 229 230
expr (118)
    on left: 173 174, on right: 65 66 67 68 75 77 132 137 138 143 144
    145 146 147 148 149 150 151 155 157 158 159 160 161 162 164 165
    166 167 168 169 224
logic_expr2 (119)
    on left: 175 176 177 178 179 180 181 182 183 184 185 186,
    on right: 181 182 183 185 186 225
expr2 (120)
    on left: 187, on right: 175 176 177 178 179 180 184 226
assign_expr (121)
    on left: 188, on right: 173
long_id (122)
    on left: 189 190 191, on right: 188 189 196
simple_expr (123)
    on left: 192 193 194 195 196 197 198 199 200 201 202,
    on right: 39 40 43 44 55 56 59 60 174 187 188 197 198 199 200 201
    202 238 239 240 241 242
block_body (124)
    on left: 203 204, on right: 122 125 135
while_loop (125)
    on left: 205, on right: 140
while_loop_header (126)
    on left: 206 207 208 209, on right: 205 210
do_while_loop (127)
    on left: 210, on right: 141
conditional_statement (128)
    on left: 211 212 213, on right: 131
switch (129)
    on left: 214 215 216 217 218, on right: 213
switch_body (130)
    on left: 219 220 221 222, on right: 214 215 216 217 218 219 220
switch_statement (131)
    on left: 223 224, on right: 214 215 216 217 218
case_statement (132)
    on left: 225 226, on right: 219 220
if_header (133)
    on left: 227 228 229 230, on right: 211 212
message_call (134)
    on left: 231, on right: 190 232
sender (135)
    on left: 232 233, on right: 231
message (136)
    on left: 234 235, on right: 231
argument_list (137)
    on left: 236 237, on right: 235 236
argument (138)
    on left: 238 239 240 241 242, on right: 236 237
protocol (139)
    on left: 243, on right: 6
protocol_header (140)
    on left: 244, on right: 243
protocol_body (141)
    on left: 245 246 247 248, on right: 243


state 0

    0 $accept: . program $end

    AT_INTERFACE       shift, and go to state 1
    AT_IMPLEMENTATION  shift, and go to state 2
    AT_PROTOCOL        shift, and go to state 3

    program                      go to state 4
    components                   go to state 5
    component                    go to state 6
    class_interface              go to state 7
    class_interface_header       go to state 8
    class_implementation         go to state 9
    class_implementation_header  go to state 10
    protocol                     go to state 11
    protocol_header              go to state 12


state 1

    8 class_interface_header: AT_INTERFACE . IDENTIFIER SEMI_COLUMN IDENTIFIER
    9                       | AT_INTERFACE . IDENTIFIER error IDENTIFIER
   10                       | AT_INTERFACE . IDENTIFIER SEMI_COLUMN
   11                       | AT_INTERFACE . IDENTIFIER IDENTIFIER
   12                       | AT_INTERFACE . IDENTIFIER

    IDENTIFIER  shift, and go to state 13


state 2

  111 class_implementation_header: AT_IMPLEMENTATION . IDENTIFIER SEMI_COLUMN IDENTIFIER
  112                            | AT_IMPLEMENTATION . IDENTIFIER error IDENTIFIER
  113                            | AT_IMPLEMENTATION . IDENTIFIER IDENTIFIER
  114                            | AT_IMPLEMENTATION . IDENTIFIER

    IDENTIFIER  shift, and go to state 14


state 3

  244 protocol_header: AT_PROTOCOL . IDENTIFIER

    IDENTIFIER  shift, and go to state 15


state 4

    0 $accept: program . $end

    $end  shift, and go to state 16


state 5

    1 program: components .
    2 components: components . component

    AT_INTERFACE       shift, and go to state 1
    AT_IMPLEMENTATION  shift, and go to state 2
    AT_PROTOCOL        shift, and go to state 3

    $default  reduce using rule 1 (program)

    component                    go to state 17
    class_interface              go to state 7
    class_interface_header       go to state 8
    class_implementation         go to state 9
    class_implementation_header  go to state 10
    protocol                     go to state 11
    protocol_header              go to state 12


state 6

    3 components: component .

    $default  reduce using rule 3 (components)


state 7

    4 component: class_interface .

    $default  reduce using rule 4 (component)


state 8

    7 class_interface: class_interface_header . class_interface_body

    OPEN_S     shift, and go to state 18
    LESS_THAN  shift, and go to state 19
    AT_END     shift, and go to state 20
    PLUS       shift, and go to state 21
    MINUS      shift, and go to state 22

    class_interface_body         go to state 23
    protocol_reference_list      go to state 24
    instance_variables           go to state 25
    interface_declaration_list   go to state 26
    interface_declaration        go to state 27
    class_method_declaration     go to state 28
    instance_method_declaration  go to state 29


state 9

    5 component: class_implementation .

    $default  reduce using rule 5 (component)


state 10

  110 class_implementation: class_implementation_header . class_implementation_body

    OPEN_S  shift, and go to state 18
    PLUS    shift, and go to state 30
    MINUS   shift, and go to state 31

    instance_variables                         go to state 32
    class_implementation_body                  go to state 33
    implementation_definition_list             go to state 34
    implementation_definition                  go to state 35
    class_implementation_definition            go to state 36
    class_implementation_definition_header     go to state 37
    instance_implementation_definition         go to state 38
    instance_implementation_definition_header  go to state 39


state 11

    6 component: protocol .

    $default  reduce using rule 6 (component)


state 12

  243 protocol: protocol_header . protocol_body

    LESS_THAN  shift, and go to state 19
    AT_END     shift, and go to state 40
    PLUS       shift, and go to state 21
    MINUS      shift, and go to state 22

    protocol_reference_list      go to state 41
    interface_declaration_list   go to state 42
    interface_declaration        go to state 27
    class_method_declaration     go to state 28
    instance_method_declaration  go to state 29
    protocol_body                go to state 43


state 13

    8 class_interface_header: AT_INTERFACE IDENTIFIER . SEMI_COLUMN IDENTIFIER
    9                       | AT_INTERFACE IDENTIFIER . error IDENTIFIER
   10                       | AT_INTERFACE IDENTIFIER . SEMI_COLUMN
   11                       | AT_INTERFACE IDENTIFIER . IDENTIFIER
   12                       | AT_INTERFACE IDENTIFIER .

    error        shift, and go to state 44
    IDENTIFIER   shift, and go to state 45
    SEMI_COLUMN  shift, and go to state 46

    OPEN_S     reduce using rule 12 (class_interface_header)
    LESS_THAN  reduce using rule 12 (class_interface_header)
    AT_END     reduce using rule 12 (class_interface_header)
    PLUS       reduce using rule 12 (class_interface_header)
    MINUS      reduce using rule 12 (class_interface_header)


state 14

  111 class_implementation_header: AT_IMPLEMENTATION IDENTIFIER . SEMI_COLUMN IDENTIFIER
  112                            | AT_IMPLEMENTATION IDENTIFIER . error IDENTIFIER
  113                            | AT_IMPLEMENTATION IDENTIFIER . IDENTIFIER
  114                            | AT_IMPLEMENTATION IDENTIFIER .

    error        shift, and go to state 47
    IDENTIFIER   shift, and go to state 48
    SEMI_COLUMN  shift, and go to state 49

    OPEN_S  reduce using rule 114 (class_implementation_header)
    PLUS    reduce using rule 114 (class_implementation_header)
    MINUS   reduce using rule 114 (class_implementation_header)


state 15

  244 protocol_header: AT_PROTOCOL IDENTIFIER .

    $default  reduce using rule 244 (protocol_header)


state 16

    0 $accept: program $end .

    $default  accept


state 17

    2 components: components component .

    $default  reduce using rule 2 (components)


state 18

   25 instance_variables: OPEN_S . instance_variable_declarations CLOSE_S
   26                   | OPEN_S . instance_variable_declarations error
   27                   | OPEN_S . instance_variable_declarations

    IDENTIFIER    shift, and go to state 50
    NSSTRING      shift, and go to state 51
    FLOAT         shift, and go to state 52
    CHAR          shift, and go to state 53
    INT           shift, and go to state 54
    AT_PUBLIC     shift, and go to state 55
    AT_PROTECTED  shift, and go to state 56
    AT_PRIVATE    shift, and go to state 57
    CONST         shift, and go to state 58
    VOID          shift, and go to state 59
    STRUCT        shift, and go to state 60
    TYPEDEF       shift, and go to state 61
    ENUM          shift, and go to state 62

    instance_variable_declarations  go to state 63
    instance_variable_declaration   go to state 64
    variable_declaration_list       go to state 65
    visibility_specification        go to state 66
    variable_declaration            go to state 67
    Enum                            go to state 68
    structrule                      go to state 69
    ArrayOne                        go to state 70
    ArrayN                          go to state 71
    type                            go to state 72
    simple_type                     go to state 73
    complex_type                    go to state 74


state 19

   21 protocol_reference_list: LESS_THAN . ids_list MORE_THAN

    IDENTIFIER  shift, and go to state 75

    ids_list  go to state 76


state 20

   20 class_interface_body: AT_END .

    $default  reduce using rule 20 (class_interface_body)


state 21

   90 class_method_declaration: PLUS . p_type method_selector SEMI_COMA
   91                         | PLUS . p_type method_selector error
   92                         | PLUS . method_selector SEMI_COMA
   93                         | PLUS . method_selector error

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 78
    OPEN_P      shift, and go to state 79

    p_type           go to state 80
    method_selector  go to state 81


state 22

   94 instance_method_declaration: MINUS . p_type method_selector SEMI_COMA
   95                            | MINUS . method_selector SEMI_COMA
   96                            | MINUS . p_type method_selector error
   97                            | MINUS . method_selector error

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 78
    OPEN_P      shift, and go to state 79

    p_type           go to state 82
    method_selector  go to state 83


state 23

    7 class_interface: class_interface_header class_interface_body .

    $default  reduce using rule 7 (class_interface)


state 24

   13 class_interface_body: protocol_reference_list . instance_variables interface_declaration_list AT_END
   14                     | protocol_reference_list . instance_variables AT_END
   15                     | protocol_reference_list . interface_declaration_list AT_END
   17                     | protocol_reference_list . AT_END

    OPEN_S  shift, and go to state 18
    AT_END  shift, and go to state 84
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    instance_variables           go to state 85
    interface_declaration_list   go to state 86
    interface_declaration        go to state 27
    class_method_declaration     go to state 28
    instance_method_declaration  go to state 29


state 25

   16 class_interface_body: instance_variables . interface_declaration_list AT_END
   18                     | instance_variables . AT_END

    AT_END  shift, and go to state 87
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    interface_declaration_list   go to state 88
    interface_declaration        go to state 27
    class_method_declaration     go to state 28
    instance_method_declaration  go to state 29


state 26

   19 class_interface_body: interface_declaration_list . AT_END
   86 interface_declaration_list: interface_declaration_list . interface_declaration

    AT_END  shift, and go to state 89
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    interface_declaration        go to state 90
    class_method_declaration     go to state 28
    instance_method_declaration  go to state 29


state 27

   87 interface_declaration_list: interface_declaration .

    $default  reduce using rule 87 (interface_declaration_list)


state 28

   88 interface_declaration: class_method_declaration .

    $default  reduce using rule 88 (interface_declaration)


state 29

   89 interface_declaration: instance_method_declaration .

    $default  reduce using rule 89 (interface_declaration)


state 30

  123 class_implementation_definition_header: PLUS . p_type method_selector
  124                                       | PLUS . method_selector

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 78
    OPEN_P      shift, and go to state 79

    p_type           go to state 91
    method_selector  go to state 92


state 31

  126 instance_implementation_definition_header: MINUS . p_type method_selector
  127                                          | MINUS . method_selector

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 78
    OPEN_P      shift, and go to state 79

    p_type           go to state 93
    method_selector  go to state 94


state 32

  115 class_implementation_body: instance_variables . implementation_definition_list AT_END
  116                          | instance_variables . AT_END

    AT_END  shift, and go to state 95
    PLUS    shift, and go to state 30
    MINUS   shift, and go to state 31

    implementation_definition_list             go to state 96
    implementation_definition                  go to state 35
    class_implementation_definition            go to state 36
    class_implementation_definition_header     go to state 37
    instance_implementation_definition         go to state 38
    instance_implementation_definition_header  go to state 39


state 33

  110 class_implementation: class_implementation_header class_implementation_body .

    $default  reduce using rule 110 (class_implementation)


state 34

  117 class_implementation_body: implementation_definition_list . AT_END
  118 implementation_definition_list: implementation_definition_list . implementation_definition

    AT_END  shift, and go to state 97
    PLUS    shift, and go to state 30
    MINUS   shift, and go to state 31

    implementation_definition                  go to state 98
    class_implementation_definition            go to state 36
    class_implementation_definition_header     go to state 37
    instance_implementation_definition         go to state 38
    instance_implementation_definition_header  go to state 39


state 35

  119 implementation_definition_list: implementation_definition .

    $default  reduce using rule 119 (implementation_definition_list)


state 36

  120 implementation_definition: class_implementation_definition .

    $default  reduce using rule 120 (implementation_definition)


state 37

  122 class_implementation_definition: class_implementation_definition_header . block_body

    OPEN_S  shift, and go to state 99

    block_body  go to state 100


state 38

  121 implementation_definition: instance_implementation_definition .

    $default  reduce using rule 121 (implementation_definition)


state 39

  125 instance_implementation_definition: instance_implementation_definition_header . block_body

    OPEN_S  shift, and go to state 99

    block_body  go to state 101


state 40

  248 protocol_body: AT_END .

    $default  reduce using rule 248 (protocol_body)


state 41

  245 protocol_body: protocol_reference_list . interface_declaration_list AT_END
  247              | protocol_reference_list . AT_END

    AT_END  shift, and go to state 102
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    interface_declaration_list   go to state 103
    interface_declaration        go to state 27
    class_method_declaration     go to state 28
    instance_method_declaration  go to state 29


state 42

   86 interface_declaration_list: interface_declaration_list . interface_declaration
  246 protocol_body: interface_declaration_list . AT_END

    AT_END  shift, and go to state 104
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    interface_declaration        go to state 90
    class_method_declaration     go to state 28
    instance_method_declaration  go to state 29


state 43

  243 protocol: protocol_header protocol_body .

    $default  reduce using rule 243 (protocol)


state 44

    9 class_interface_header: AT_INTERFACE IDENTIFIER error . IDENTIFIER

    IDENTIFIER  shift, and go to state 105


state 45

   11 class_interface_header: AT_INTERFACE IDENTIFIER IDENTIFIER .

    $default  reduce using rule 11 (class_interface_header)


state 46

    8 class_interface_header: AT_INTERFACE IDENTIFIER SEMI_COLUMN . IDENTIFIER
   10                       | AT_INTERFACE IDENTIFIER SEMI_COLUMN .

    IDENTIFIER  shift, and go to state 106

    $default  reduce using rule 10 (class_interface_header)


state 47

  112 class_implementation_header: AT_IMPLEMENTATION IDENTIFIER error . IDENTIFIER

    IDENTIFIER  shift, and go to state 107


state 48

  113 class_implementation_header: AT_IMPLEMENTATION IDENTIFIER IDENTIFIER .

    $default  reduce using rule 113 (class_implementation_header)


state 49

  111 class_implementation_header: AT_IMPLEMENTATION IDENTIFIER SEMI_COLUMN . IDENTIFIER

    IDENTIFIER  shift, and go to state 108


state 50

   85 complex_type: IDENTIFIER . MULTI

    MULTI  shift, and go to state 109


state 51

   83 simple_type: NSSTRING .

    $default  reduce using rule 83 (simple_type)


state 52

   82 simple_type: FLOAT .

    $default  reduce using rule 82 (simple_type)


state 53

   81 simple_type: CHAR .

    $default  reduce using rule 81 (simple_type)


state 54

   80 simple_type: INT .

    $default  reduce using rule 80 (simple_type)


state 55

   36 visibility_specification: AT_PUBLIC .

    $default  reduce using rule 36 (visibility_specification)


state 56

   35 visibility_specification: AT_PROTECTED .

    $default  reduce using rule 35 (visibility_specification)


state 57

   34 visibility_specification: AT_PRIVATE .

    $default  reduce using rule 34 (visibility_specification)


state 58

   41 variable_declaration: CONST . type IDENTIFIER SEMI_COMA
   42                     | CONST . type IDENTIFIER error
   43                     | CONST . type IDENTIFIER EQUAL simple_expr SEMI_COMA
   44                     | CONST . type IDENTIFIER EQUAL simple_expr error

    IDENTIFIER  shift, and go to state 50
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59

    type          go to state 110
    simple_type   go to state 73
    complex_type  go to state 74


state 59

   84 simple_type: VOID .

    $default  reduce using rule 84 (simple_type)


state 60

   51 structrule: STRUCT . IDENTIFIER OPEN_S variable_declarations CLOSE_S SEMI_COMA
   52           | STRUCT . IDENTIFIER OPEN_S variable_declarations CLOSE_S ids_list SEMI_COMA

    IDENTIFIER  shift, and go to state 111


state 61

   50 Enum: TYPEDEF . ENUM OPEN_S ids_list CLOSE_S IDENTIFIER SEMI_COMA

    ENUM  shift, and go to state 112


state 62

   49 Enum: ENUM . OPEN_S ids_list CLOSE_S IDENTIFIER SEMI_COMA

    OPEN_S  shift, and go to state 113


state 63

   25 instance_variables: OPEN_S instance_variable_declarations . CLOSE_S
   26                   | OPEN_S instance_variable_declarations . error
   27                   | OPEN_S instance_variable_declarations .
   28 instance_variable_declarations: instance_variable_declarations . instance_variable_declaration

    error         shift, and go to state 114
    AT_PUBLIC     shift, and go to state 55
    AT_PROTECTED  shift, and go to state 56
    AT_PRIVATE    shift, and go to state 57
    CLOSE_S       shift, and go to state 115

    AT_END  reduce using rule 27 (instance_variables)
    PLUS    reduce using rule 27 (instance_variables)
    MINUS   reduce using rule 27 (instance_variables)

    instance_variable_declaration  go to state 116
    visibility_specification       go to state 66


state 64

   29 instance_variable_declarations: instance_variable_declaration .

    $default  reduce using rule 29 (instance_variable_declarations)


state 65

   30 instance_variable_declarations: variable_declaration_list .
   32 variable_declaration_list: variable_declaration_list . variable_declaration

    IDENTIFIER  shift, and go to state 50
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    CONST       shift, and go to state 58
    VOID        shift, and go to state 59
    STRUCT      shift, and go to state 60
    TYPEDEF     shift, and go to state 61
    ENUM        shift, and go to state 62

    $default  reduce using rule 30 (instance_variable_declarations)

    variable_declaration  go to state 117
    Enum                  go to state 68
    structrule            go to state 69
    ArrayOne              go to state 70
    ArrayN                go to state 71
    type                  go to state 72
    simple_type           go to state 73
    complex_type          go to state 74


state 66

   31 instance_variable_declaration: visibility_specification . variable_declaration_list

    IDENTIFIER  shift, and go to state 50
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    CONST       shift, and go to state 58
    VOID        shift, and go to state 59
    STRUCT      shift, and go to state 60
    TYPEDEF     shift, and go to state 61
    ENUM        shift, and go to state 62

    variable_declaration_list  go to state 118
    variable_declaration       go to state 67
    Enum                       go to state 68
    structrule                 go to state 69
    ArrayOne                   go to state 70
    ArrayN                     go to state 71
    type                       go to state 72
    simple_type                go to state 73
    complex_type               go to state 74


state 67

   33 variable_declaration_list: variable_declaration .

    $default  reduce using rule 33 (variable_declaration_list)


state 68

   45 variable_declaration: Enum .

    $default  reduce using rule 45 (variable_declaration)


state 69

   46 variable_declaration: structrule .

    $default  reduce using rule 46 (variable_declaration)


state 70

   47 variable_declaration: ArrayOne .

    $default  reduce using rule 47 (variable_declaration)


state 71

   48 variable_declaration: ArrayN .

    $default  reduce using rule 48 (variable_declaration)


state 72

   37 variable_declaration: type . IDENTIFIER SEMI_COMA
   38                     | type . IDENTIFIER error
   39                     | type . IDENTIFIER EQUAL simple_expr SEMI_COMA
   40                     | type . IDENTIFIER EQUAL simple_expr error
   61 ArrayOne: type . IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR EQUAL OPEN_S CLOSE_S SEMI_COMA
   62         | type . IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR SEMI_COMA
   63         | type . IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR EQUAL OPEN_S array_body CLOSE_S SEMI_COMA
   64         | type . IDENTIFIER OPEN_ARR CLOSE_ARR EQUAL OPEN_S array_body CLOSE_S SEMI_COMA
   69 ArrayN: type . IDENTIFIER Multi EQUAL OPEN_S CLOSE_S SEMI_COMA
   70       | type . IDENTIFIER Multi SEMI_COMA
   71       | type . IDENTIFIER Multi EQUAL OPEN_S array_body2 CLOSE_S SEMI_COMA

    IDENTIFIER  shift, and go to state 119


state 73

   78 type: simple_type .

    $default  reduce using rule 78 (type)


state 74

   79 type: complex_type .

    $default  reduce using rule 79 (type)


state 75

   22 ids_list: IDENTIFIER .

    $default  reduce using rule 22 (ids_list)


state 76

   21 protocol_reference_list: LESS_THAN ids_list . MORE_THAN
   23 ids_list: ids_list . error IDENTIFIER
   24         | ids_list . COMMA IDENTIFIER

    error      shift, and go to state 120
    COMMA      shift, and go to state 121
    MORE_THAN  shift, and go to state 122


state 77

   99 p_type: error . type CLOSE_P

    IDENTIFIER  shift, and go to state 50
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59

    type          go to state 123
    simple_type   go to state 73
    complex_type  go to state 74


state 78

  102 method_selector: IDENTIFIER . SEMI_COLUMN @1 parameter_list
  103                | IDENTIFIER .

    SEMI_COLUMN  shift, and go to state 124

    $default  reduce using rule 103 (method_selector)


state 79

   98 p_type: OPEN_P . type CLOSE_P
  100       | OPEN_P . type error

    IDENTIFIER  shift, and go to state 50
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59

    type          go to state 125
    simple_type   go to state 73
    complex_type  go to state 74


state 80

   90 class_method_declaration: PLUS p_type . method_selector SEMI_COMA
   91                         | PLUS p_type . method_selector error

    IDENTIFIER  shift, and go to state 78

    method_selector  go to state 126


state 81

   92 class_method_declaration: PLUS method_selector . SEMI_COMA
   93                         | PLUS method_selector . error

    error      shift, and go to state 127
    SEMI_COMA  shift, and go to state 128


state 82

   94 instance_method_declaration: MINUS p_type . method_selector SEMI_COMA
   96                            | MINUS p_type . method_selector error

    IDENTIFIER  shift, and go to state 78

    method_selector  go to state 129


state 83

   95 instance_method_declaration: MINUS method_selector . SEMI_COMA
   97                            | MINUS method_selector . error

    error      shift, and go to state 130
    SEMI_COMA  shift, and go to state 131


state 84

   17 class_interface_body: protocol_reference_list AT_END .

    $default  reduce using rule 17 (class_interface_body)


state 85

   13 class_interface_body: protocol_reference_list instance_variables . interface_declaration_list AT_END
   14                     | protocol_reference_list instance_variables . AT_END

    AT_END  shift, and go to state 132
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    interface_declaration_list   go to state 133
    interface_declaration        go to state 27
    class_method_declaration     go to state 28
    instance_method_declaration  go to state 29


state 86

   15 class_interface_body: protocol_reference_list interface_declaration_list . AT_END
   86 interface_declaration_list: interface_declaration_list . interface_declaration

    AT_END  shift, and go to state 134
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    interface_declaration        go to state 90
    class_method_declaration     go to state 28
    instance_method_declaration  go to state 29


state 87

   18 class_interface_body: instance_variables AT_END .

    $default  reduce using rule 18 (class_interface_body)


state 88

   16 class_interface_body: instance_variables interface_declaration_list . AT_END
   86 interface_declaration_list: interface_declaration_list . interface_declaration

    AT_END  shift, and go to state 135
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    interface_declaration        go to state 90
    class_method_declaration     go to state 28
    instance_method_declaration  go to state 29


state 89

   19 class_interface_body: interface_declaration_list AT_END .

    $default  reduce using rule 19 (class_interface_body)


state 90

   86 interface_declaration_list: interface_declaration_list interface_declaration .

    $default  reduce using rule 86 (interface_declaration_list)


state 91

  123 class_implementation_definition_header: PLUS p_type . method_selector

    IDENTIFIER  shift, and go to state 78

    method_selector  go to state 136


state 92

  124 class_implementation_definition_header: PLUS method_selector .

    $default  reduce using rule 124 (class_implementation_definition_header)


state 93

  126 instance_implementation_definition_header: MINUS p_type . method_selector

    IDENTIFIER  shift, and go to state 78

    method_selector  go to state 137


state 94

  127 instance_implementation_definition_header: MINUS method_selector .

    $default  reduce using rule 127 (instance_implementation_definition_header)


state 95

  116 class_implementation_body: instance_variables AT_END .

    $default  reduce using rule 116 (class_implementation_body)


state 96

  115 class_implementation_body: instance_variables implementation_definition_list . AT_END
  118 implementation_definition_list: implementation_definition_list . implementation_definition

    AT_END  shift, and go to state 138
    PLUS    shift, and go to state 30
    MINUS   shift, and go to state 31

    implementation_definition                  go to state 98
    class_implementation_definition            go to state 36
    class_implementation_definition_header     go to state 37
    instance_implementation_definition         go to state 38
    instance_implementation_definition_header  go to state 39


state 97

  117 class_implementation_body: implementation_definition_list AT_END .

    $default  reduce using rule 117 (class_implementation_body)


state 98

  118 implementation_definition_list: implementation_definition_list implementation_definition .

    $default  reduce using rule 118 (implementation_definition_list)


state 99

  203 block_body: OPEN_S . statement_list CLOSE_S
  204           | OPEN_S . CLOSE_S

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 139
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    CLOSE_S     shift, and go to state 140
    CONST       shift, and go to state 58
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 141
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    FOR         shift, and go to state 146
    WHILE       shift, and go to state 147
    IF          shift, and go to state 148
    OPEN_ARR    shift, and go to state 149
    RETURN      shift, and go to state 150
    DO          shift, and go to state 151
    SWITCH      shift, and go to state 152
    STRUCT      shift, and go to state 60
    TYPEDEF     shift, and go to state 61
    ENUM        shift, and go to state 62

    OPEN_S  reduce using rule 134 (@2)

    variable_declaration   go to state 153
    Enum                   go to state 68
    structrule             go to state 69
    ArrayOne               go to state 70
    ArrayN                 go to state 71
    type                   go to state 72
    simple_type            go to state 73
    complex_type           go to state 74
    p_type                 go to state 154
    statement_list         go to state 155
    statement              go to state 156
    @2                     go to state 157
    return_statement       go to state 158
    loop_statement         go to state 159
    for_loop               go to state 160
    for_loop_header        go to state 161
    expr                   go to state 162
    assign_expr            go to state 163
    long_id                go to state 164
    simple_expr            go to state 165
    while_loop             go to state 166
    while_loop_header      go to state 167
    do_while_loop          go to state 168
    conditional_statement  go to state 169
    switch                 go to state 170
    if_header              go to state 171
    message_call           go to state 172


state 100

  122 class_implementation_definition: class_implementation_definition_header block_body .

    $default  reduce using rule 122 (class_implementation_definition)


state 101

  125 instance_implementation_definition: instance_implementation_definition_header block_body .

    $default  reduce using rule 125 (instance_implementation_definition)


state 102

  247 protocol_body: protocol_reference_list AT_END .

    $default  reduce using rule 247 (protocol_body)


state 103

   86 interface_declaration_list: interface_declaration_list . interface_declaration
  245 protocol_body: protocol_reference_list interface_declaration_list . AT_END

    AT_END  shift, and go to state 173
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    interface_declaration        go to state 90
    class_method_declaration     go to state 28
    instance_method_declaration  go to state 29


state 104

  246 protocol_body: interface_declaration_list AT_END .

    $default  reduce using rule 246 (protocol_body)


state 105

    9 class_interface_header: AT_INTERFACE IDENTIFIER error IDENTIFIER .

    $default  reduce using rule 9 (class_interface_header)


state 106

    8 class_interface_header: AT_INTERFACE IDENTIFIER SEMI_COLUMN IDENTIFIER .

    $default  reduce using rule 8 (class_interface_header)


state 107

  112 class_implementation_header: AT_IMPLEMENTATION IDENTIFIER error IDENTIFIER .

    $default  reduce using rule 112 (class_implementation_header)


state 108

  111 class_implementation_header: AT_IMPLEMENTATION IDENTIFIER SEMI_COLUMN IDENTIFIER .

    $default  reduce using rule 111 (class_implementation_header)


state 109

   85 complex_type: IDENTIFIER MULTI .

    $default  reduce using rule 85 (complex_type)


state 110

   41 variable_declaration: CONST type . IDENTIFIER SEMI_COMA
   42                     | CONST type . IDENTIFIER error
   43                     | CONST type . IDENTIFIER EQUAL simple_expr SEMI_COMA
   44                     | CONST type . IDENTIFIER EQUAL simple_expr error

    IDENTIFIER  shift, and go to state 174


state 111

   51 structrule: STRUCT IDENTIFIER . OPEN_S variable_declarations CLOSE_S SEMI_COMA
   52           | STRUCT IDENTIFIER . OPEN_S variable_declarations CLOSE_S ids_list SEMI_COMA

    OPEN_S  shift, and go to state 175


state 112

   50 Enum: TYPEDEF ENUM . OPEN_S ids_list CLOSE_S IDENTIFIER SEMI_COMA

    OPEN_S  shift, and go to state 176


state 113

   49 Enum: ENUM OPEN_S . ids_list CLOSE_S IDENTIFIER SEMI_COMA

    IDENTIFIER  shift, and go to state 75

    ids_list  go to state 177


state 114

   26 instance_variables: OPEN_S instance_variable_declarations error .

    $default  reduce using rule 26 (instance_variables)


state 115

   25 instance_variables: OPEN_S instance_variable_declarations CLOSE_S .

    $default  reduce using rule 25 (instance_variables)


state 116

   28 instance_variable_declarations: instance_variable_declarations instance_variable_declaration .

    $default  reduce using rule 28 (instance_variable_declarations)


state 117

   32 variable_declaration_list: variable_declaration_list variable_declaration .

    $default  reduce using rule 32 (variable_declaration_list)


state 118

   31 instance_variable_declaration: visibility_specification variable_declaration_list .
   32 variable_declaration_list: variable_declaration_list . variable_declaration

    IDENTIFIER  shift, and go to state 50
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    CONST       shift, and go to state 58
    VOID        shift, and go to state 59
    STRUCT      shift, and go to state 60
    TYPEDEF     shift, and go to state 61
    ENUM        shift, and go to state 62

    $default  reduce using rule 31 (instance_variable_declaration)

    variable_declaration  go to state 117
    Enum                  go to state 68
    structrule            go to state 69
    ArrayOne              go to state 70
    ArrayN                go to state 71
    type                  go to state 72
    simple_type           go to state 73
    complex_type          go to state 74


state 119

   37 variable_declaration: type IDENTIFIER . SEMI_COMA
   38                     | type IDENTIFIER . error
   39                     | type IDENTIFIER . EQUAL simple_expr SEMI_COMA
   40                     | type IDENTIFIER . EQUAL simple_expr error
   61 ArrayOne: type IDENTIFIER . OPEN_ARR INT_VAL CLOSE_ARR EQUAL OPEN_S CLOSE_S SEMI_COMA
   62         | type IDENTIFIER . OPEN_ARR INT_VAL CLOSE_ARR SEMI_COMA
   63         | type IDENTIFIER . OPEN_ARR INT_VAL CLOSE_ARR EQUAL OPEN_S array_body CLOSE_S SEMI_COMA
   64         | type IDENTIFIER . OPEN_ARR CLOSE_ARR EQUAL OPEN_S array_body CLOSE_S SEMI_COMA
   69 ArrayN: type IDENTIFIER . Multi EQUAL OPEN_S CLOSE_S SEMI_COMA
   70       | type IDENTIFIER . Multi SEMI_COMA
   71       | type IDENTIFIER . Multi EQUAL OPEN_S array_body2 CLOSE_S SEMI_COMA

    error      shift, and go to state 178
    SEMI_COMA  shift, and go to state 179
    EQUAL      shift, and go to state 180
    OPEN_ARR   shift, and go to state 181

    Multi  go to state 182


state 120

   23 ids_list: ids_list error . IDENTIFIER

    IDENTIFIER  shift, and go to state 183


state 121

   24 ids_list: ids_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 184


state 122

   21 protocol_reference_list: LESS_THAN ids_list MORE_THAN .

    $default  reduce using rule 21 (protocol_reference_list)


state 123

   99 p_type: error type . CLOSE_P

    CLOSE_P  shift, and go to state 185


state 124

  102 method_selector: IDENTIFIER SEMI_COLUMN . @1 parameter_list

    $default  reduce using rule 101 (@1)

    @1  go to state 186


state 125

   98 p_type: OPEN_P type . CLOSE_P
  100       | OPEN_P type . error

    error    shift, and go to state 187
    CLOSE_P  shift, and go to state 188


state 126

   90 class_method_declaration: PLUS p_type method_selector . SEMI_COMA
   91                         | PLUS p_type method_selector . error

    error      shift, and go to state 189
    SEMI_COMA  shift, and go to state 190


state 127

   93 class_method_declaration: PLUS method_selector error .

    $default  reduce using rule 93 (class_method_declaration)


state 128

   92 class_method_declaration: PLUS method_selector SEMI_COMA .

    $default  reduce using rule 92 (class_method_declaration)


state 129

   94 instance_method_declaration: MINUS p_type method_selector . SEMI_COMA
   96                            | MINUS p_type method_selector . error

    error      shift, and go to state 191
    SEMI_COMA  shift, and go to state 192


state 130

   97 instance_method_declaration: MINUS method_selector error .

    $default  reduce using rule 97 (instance_method_declaration)


state 131

   95 instance_method_declaration: MINUS method_selector SEMI_COMA .

    $default  reduce using rule 95 (instance_method_declaration)


state 132

   14 class_interface_body: protocol_reference_list instance_variables AT_END .

    $default  reduce using rule 14 (class_interface_body)


state 133

   13 class_interface_body: protocol_reference_list instance_variables interface_declaration_list . AT_END
   86 interface_declaration_list: interface_declaration_list . interface_declaration

    AT_END  shift, and go to state 193
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    interface_declaration        go to state 90
    class_method_declaration     go to state 28
    instance_method_declaration  go to state 29


state 134

   15 class_interface_body: protocol_reference_list interface_declaration_list AT_END .

    $default  reduce using rule 15 (class_interface_body)


state 135

   16 class_interface_body: instance_variables interface_declaration_list AT_END .

    $default  reduce using rule 16 (class_interface_body)


state 136

  123 class_implementation_definition_header: PLUS p_type method_selector .

    $default  reduce using rule 123 (class_implementation_definition_header)


state 137

  126 instance_implementation_definition_header: MINUS p_type method_selector .

    $default  reduce using rule 126 (instance_implementation_definition_header)


state 138

  115 class_implementation_body: instance_variables implementation_definition_list AT_END .

    $default  reduce using rule 115 (class_implementation_body)


state 139

   85 complex_type: IDENTIFIER . MULTI
  191 long_id: IDENTIFIER .

    MULTI  shift, and go to state 109

    $default  reduce using rule 191 (long_id)


state 140

  204 block_body: OPEN_S CLOSE_S .

    $default  reduce using rule 204 (block_body)


state 141

   98 p_type: OPEN_P . type CLOSE_P
  100       | OPEN_P . type error
  201 simple_expr: OPEN_P . simple_expr CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 139
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 141
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    OPEN_ARR    shift, and go to state 149

    type          go to state 125
    simple_type   go to state 73
    complex_type  go to state 74
    p_type        go to state 154
    long_id       go to state 194
    simple_expr   go to state 195
    message_call  go to state 172


state 142

  192 simple_expr: STRING_VAL .

    $default  reduce using rule 192 (simple_expr)


state 143

  194 simple_expr: FLOAT_VAL .

    $default  reduce using rule 194 (simple_expr)


state 144

  195 simple_expr: CHAR_VAL .

    $default  reduce using rule 195 (simple_expr)


state 145

  193 simple_expr: INT_VAL .

    $default  reduce using rule 193 (simple_expr)


state 146

  143 for_loop_header: FOR . OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  144                | FOR . OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr error
  145                | FOR . for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  146                | FOR . error for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  147                | FOR . OPEN_P SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  148                | FOR . OPEN_P SEMI_COMA logic_expr SEMI_COMA expr error
  149                | FOR . SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  150                | FOR . error SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  151                | FOR . OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  152                | FOR . OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  153                | FOR . OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  154                | FOR . OPEN_P SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  155                | FOR . OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  156                | FOR . OPEN_P SEMI_COMA SEMI_COMA CLOSE_P

    error       shift, and go to state 196
    IDENTIFIER  shift, and go to state 197
    INT         shift, and go to state 198
    SEMI_COMA   shift, and go to state 199
    OPEN_P      shift, and go to state 200

    for_initializer  go to state 201


state 147

  206 while_loop_header: WHILE . OPEN_P logic_expr CLOSE_P
  207                  | WHILE . OPEN_P logic_expr error
  208                  | WHILE . logic_expr CLOSE_P
  209                  | WHILE . error logic_expr CLOSE_P

    error       shift, and go to state 202
    IDENTIFIER  shift, and go to state 203
    OPEN_P      shift, and go to state 204
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    NOT_EQUAL   shift, and go to state 205
    OPEN_ARR    shift, and go to state 149

    p_type        go to state 154
    logic_expr    go to state 206
    expr          go to state 207
    assign_expr   go to state 163
    long_id       go to state 164
    simple_expr   go to state 165
    message_call  go to state 172


state 148

  227 if_header: IF . OPEN_P logic_expr CLOSE_P
  228          | IF . OPEN_P logic_expr error
  229          | IF . logic_expr CLOSE_P
  230          | IF . error logic_expr CLOSE_P

    error       shift, and go to state 208
    IDENTIFIER  shift, and go to state 203
    OPEN_P      shift, and go to state 209
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    NOT_EQUAL   shift, and go to state 205
    OPEN_ARR    shift, and go to state 149

    p_type        go to state 154
    logic_expr    go to state 210
    expr          go to state 207
    assign_expr   go to state 163
    long_id       go to state 164
    simple_expr   go to state 165
    message_call  go to state 172


state 149

  231 message_call: OPEN_ARR . sender message CLOSE_ARR

    IDENTIFIER  shift, and go to state 211
    OPEN_ARR    shift, and go to state 149

    message_call  go to state 212
    sender        go to state 213


state 150

  137 return_statement: RETURN . expr SEMI_COMA
  138                 | RETURN . expr error

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 203
    OPEN_P      shift, and go to state 141
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    OPEN_ARR    shift, and go to state 149

    p_type        go to state 154
    expr          go to state 214
    assign_expr   go to state 163
    long_id       go to state 164
    simple_expr   go to state 165
    message_call  go to state 172


state 151

  210 do_while_loop: DO . statement while_loop_header SEMI_COMA

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 139
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    CONST       shift, and go to state 58
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 141
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    FOR         shift, and go to state 146
    WHILE       shift, and go to state 147
    IF          shift, and go to state 148
    OPEN_ARR    shift, and go to state 149
    RETURN      shift, and go to state 150
    DO          shift, and go to state 151
    SWITCH      shift, and go to state 152
    STRUCT      shift, and go to state 60
    TYPEDEF     shift, and go to state 61
    ENUM        shift, and go to state 62

    OPEN_S  reduce using rule 134 (@2)

    variable_declaration   go to state 153
    Enum                   go to state 68
    structrule             go to state 69
    ArrayOne               go to state 70
    ArrayN                 go to state 71
    type                   go to state 72
    simple_type            go to state 73
    complex_type           go to state 74
    p_type                 go to state 154
    statement              go to state 215
    @2                     go to state 157
    return_statement       go to state 158
    loop_statement         go to state 159
    for_loop               go to state 160
    for_loop_header        go to state 161
    expr                   go to state 162
    assign_expr            go to state 163
    long_id                go to state 164
    simple_expr            go to state 165
    while_loop             go to state 166
    while_loop_header      go to state 167
    do_while_loop          go to state 168
    conditional_statement  go to state 169
    switch                 go to state 170
    if_header              go to state 171
    message_call           go to state 172


state 152

  214 switch: SWITCH . OPEN_P switch_statement CLOSE_P OPEN_S switch_body CLOSE_S
  215       | SWITCH . error switch_statement CLOSE_P OPEN_S switch_body CLOSE_S
  216       | SWITCH . OPEN_P switch_statement error OPEN_S switch_body CLOSE_S
  217       | SWITCH . OPEN_P switch_statement CLOSE_P OPEN_S switch_body error
  218       | SWITCH . OPEN_P switch_statement CLOSE_P error switch_body CLOSE_S

    error   shift, and go to state 216
    OPEN_P  shift, and go to state 217


state 153

  133 statement: variable_declaration .

    $default  reduce using rule 133 (statement)


state 154

  202 simple_expr: p_type . simple_expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 203
    OPEN_P      shift, and go to state 141
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    OPEN_ARR    shift, and go to state 149

    p_type        go to state 154
    long_id       go to state 194
    simple_expr   go to state 218
    message_call  go to state 172


state 155

  128 statement_list: statement_list . statement
  203 block_body: OPEN_S statement_list . CLOSE_S

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 139
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    CLOSE_S     shift, and go to state 219
    CONST       shift, and go to state 58
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 141
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    FOR         shift, and go to state 146
    WHILE       shift, and go to state 147
    IF          shift, and go to state 148
    OPEN_ARR    shift, and go to state 149
    RETURN      shift, and go to state 150
    DO          shift, and go to state 151
    SWITCH      shift, and go to state 152
    STRUCT      shift, and go to state 60
    TYPEDEF     shift, and go to state 61
    ENUM        shift, and go to state 62

    OPEN_S  reduce using rule 134 (@2)

    variable_declaration   go to state 153
    Enum                   go to state 68
    structrule             go to state 69
    ArrayOne               go to state 70
    ArrayN                 go to state 71
    type                   go to state 72
    simple_type            go to state 73
    complex_type           go to state 74
    p_type                 go to state 154
    statement              go to state 220
    @2                     go to state 157
    return_statement       go to state 158
    loop_statement         go to state 159
    for_loop               go to state 160
    for_loop_header        go to state 161
    expr                   go to state 162
    assign_expr            go to state 163
    long_id                go to state 164
    simple_expr            go to state 165
    while_loop             go to state 166
    while_loop_header      go to state 167
    do_while_loop          go to state 168
    conditional_statement  go to state 169
    switch                 go to state 170
    if_header              go to state 171
    message_call           go to state 172


state 156

  129 statement_list: statement .

    $default  reduce using rule 129 (statement_list)


state 157

  135 statement: @2 . block_body

    OPEN_S  shift, and go to state 99

    block_body  go to state 221


state 158

  136 statement: return_statement .

    $default  reduce using rule 136 (statement)


state 159

  130 statement: loop_statement .

    $default  reduce using rule 130 (statement)


state 160

  139 loop_statement: for_loop .

    $default  reduce using rule 139 (loop_statement)


state 161

  142 for_loop: for_loop_header . statement

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 139
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    CONST       shift, and go to state 58
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 141
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    FOR         shift, and go to state 146
    WHILE       shift, and go to state 147
    IF          shift, and go to state 148
    OPEN_ARR    shift, and go to state 149
    RETURN      shift, and go to state 150
    DO          shift, and go to state 151
    SWITCH      shift, and go to state 152
    STRUCT      shift, and go to state 60
    TYPEDEF     shift, and go to state 61
    ENUM        shift, and go to state 62

    OPEN_S  reduce using rule 134 (@2)

    variable_declaration   go to state 153
    Enum                   go to state 68
    structrule             go to state 69
    ArrayOne               go to state 70
    ArrayN                 go to state 71
    type                   go to state 72
    simple_type            go to state 73
    complex_type           go to state 74
    p_type                 go to state 154
    statement              go to state 222
    @2                     go to state 157
    return_statement       go to state 158
    loop_statement         go to state 159
    for_loop               go to state 160
    for_loop_header        go to state 161
    expr                   go to state 162
    assign_expr            go to state 163
    long_id                go to state 164
    simple_expr            go to state 165
    while_loop             go to state 166
    while_loop_header      go to state 167
    do_while_loop          go to state 168
    conditional_statement  go to state 169
    switch                 go to state 170
    if_header              go to state 171
    message_call           go to state 172


state 162

  132 statement: expr . SEMI_COMA

    SEMI_COMA  shift, and go to state 223


state 163

  173 expr: assign_expr .

    $default  reduce using rule 173 (expr)


state 164

  188 assign_expr: long_id . EQUAL simple_expr
  189 long_id: long_id . DOT IDENTIFIER
  196 simple_expr: long_id .

    EQUAL  shift, and go to state 224
    DOT    shift, and go to state 225

    $default  reduce using rule 196 (simple_expr)


state 165

  174 expr: simple_expr .
  197 simple_expr: simple_expr . PLUS simple_expr
  198            | simple_expr . MINUS simple_expr
  199            | simple_expr . MULTI simple_expr
  200            | simple_expr . DIV simple_expr

    PLUS   shift, and go to state 226
    MINUS  shift, and go to state 227
    MULTI  shift, and go to state 228
    DIV    shift, and go to state 229

    $default  reduce using rule 174 (expr)


state 166

  140 loop_statement: while_loop .

    $default  reduce using rule 140 (loop_statement)


state 167

  205 while_loop: while_loop_header . statement

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 139
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    CONST       shift, and go to state 58
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 141
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    FOR         shift, and go to state 146
    WHILE       shift, and go to state 147
    IF          shift, and go to state 148
    OPEN_ARR    shift, and go to state 149
    RETURN      shift, and go to state 150
    DO          shift, and go to state 151
    SWITCH      shift, and go to state 152
    STRUCT      shift, and go to state 60
    TYPEDEF     shift, and go to state 61
    ENUM        shift, and go to state 62

    OPEN_S  reduce using rule 134 (@2)

    variable_declaration   go to state 153
    Enum                   go to state 68
    structrule             go to state 69
    ArrayOne               go to state 70
    ArrayN                 go to state 71
    type                   go to state 72
    simple_type            go to state 73
    complex_type           go to state 74
    p_type                 go to state 154
    statement              go to state 230
    @2                     go to state 157
    return_statement       go to state 158
    loop_statement         go to state 159
    for_loop               go to state 160
    for_loop_header        go to state 161
    expr                   go to state 162
    assign_expr            go to state 163
    long_id                go to state 164
    simple_expr            go to state 165
    while_loop             go to state 166
    while_loop_header      go to state 167
    do_while_loop          go to state 168
    conditional_statement  go to state 169
    switch                 go to state 170
    if_header              go to state 171
    message_call           go to state 172


state 168

  141 loop_statement: do_while_loop .

    $default  reduce using rule 141 (loop_statement)


state 169

  131 statement: conditional_statement .

    $default  reduce using rule 131 (statement)


state 170

  213 conditional_statement: switch .

    $default  reduce using rule 213 (conditional_statement)


state 171

  211 conditional_statement: if_header . statement
  212                      | if_header . statement ELSE statement

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 139
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    CONST       shift, and go to state 58
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 141
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    FOR         shift, and go to state 146
    WHILE       shift, and go to state 147
    IF          shift, and go to state 148
    OPEN_ARR    shift, and go to state 149
    RETURN      shift, and go to state 150
    DO          shift, and go to state 151
    SWITCH      shift, and go to state 152
    STRUCT      shift, and go to state 60
    TYPEDEF     shift, and go to state 61
    ENUM        shift, and go to state 62

    OPEN_S  reduce using rule 134 (@2)

    variable_declaration   go to state 153
    Enum                   go to state 68
    structrule             go to state 69
    ArrayOne               go to state 70
    ArrayN                 go to state 71
    type                   go to state 72
    simple_type            go to state 73
    complex_type           go to state 74
    p_type                 go to state 154
    statement              go to state 231
    @2                     go to state 157
    return_statement       go to state 158
    loop_statement         go to state 159
    for_loop               go to state 160
    for_loop_header        go to state 161
    expr                   go to state 162
    assign_expr            go to state 163
    long_id                go to state 164
    simple_expr            go to state 165
    while_loop             go to state 166
    while_loop_header      go to state 167
    do_while_loop          go to state 168
    conditional_statement  go to state 169
    switch                 go to state 170
    if_header              go to state 171
    message_call           go to state 172


state 172

  190 long_id: message_call .

    $default  reduce using rule 190 (long_id)


state 173

  245 protocol_body: protocol_reference_list interface_declaration_list AT_END .

    $default  reduce using rule 245 (protocol_body)


state 174

   41 variable_declaration: CONST type IDENTIFIER . SEMI_COMA
   42                     | CONST type IDENTIFIER . error
   43                     | CONST type IDENTIFIER . EQUAL simple_expr SEMI_COMA
   44                     | CONST type IDENTIFIER . EQUAL simple_expr error

    error      shift, and go to state 232
    SEMI_COMA  shift, and go to state 233
    EQUAL      shift, and go to state 234


state 175

   51 structrule: STRUCT IDENTIFIER OPEN_S . variable_declarations CLOSE_S SEMI_COMA
   52           | STRUCT IDENTIFIER OPEN_S . variable_declarations CLOSE_S ids_list SEMI_COMA

    IDENTIFIER  shift, and go to state 50
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    CONST       shift, and go to state 235
    VOID        shift, and go to state 59

    variable_declarations  go to state 236
    type                   go to state 237
    simple_type            go to state 73
    complex_type           go to state 74


state 176

   50 Enum: TYPEDEF ENUM OPEN_S . ids_list CLOSE_S IDENTIFIER SEMI_COMA

    IDENTIFIER  shift, and go to state 75

    ids_list  go to state 238


state 177

   23 ids_list: ids_list . error IDENTIFIER
   24         | ids_list . COMMA IDENTIFIER
   49 Enum: ENUM OPEN_S ids_list . CLOSE_S IDENTIFIER SEMI_COMA

    error    shift, and go to state 120
    CLOSE_S  shift, and go to state 239
    COMMA    shift, and go to state 121


state 178

   38 variable_declaration: type IDENTIFIER error .

    $default  reduce using rule 38 (variable_declaration)


state 179

   37 variable_declaration: type IDENTIFIER SEMI_COMA .

    $default  reduce using rule 37 (variable_declaration)


state 180

   39 variable_declaration: type IDENTIFIER EQUAL . simple_expr SEMI_COMA
   40                     | type IDENTIFIER EQUAL . simple_expr error

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 203
    OPEN_P      shift, and go to state 141
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    OPEN_ARR    shift, and go to state 149

    p_type        go to state 154
    long_id       go to state 194
    simple_expr   go to state 240
    message_call  go to state 172


state 181

   61 ArrayOne: type IDENTIFIER OPEN_ARR . INT_VAL CLOSE_ARR EQUAL OPEN_S CLOSE_S SEMI_COMA
   62         | type IDENTIFIER OPEN_ARR . INT_VAL CLOSE_ARR SEMI_COMA
   63         | type IDENTIFIER OPEN_ARR . INT_VAL CLOSE_ARR EQUAL OPEN_S array_body CLOSE_S SEMI_COMA
   64         | type IDENTIFIER OPEN_ARR . CLOSE_ARR EQUAL OPEN_S array_body CLOSE_S SEMI_COMA
   72 Multi: OPEN_ARR . INT_VAL CLOSE_ARR OPEN_ARR INT_VAL CLOSE_ARR

    INT_VAL    shift, and go to state 241
    CLOSE_ARR  shift, and go to state 242


state 182

   69 ArrayN: type IDENTIFIER Multi . EQUAL OPEN_S CLOSE_S SEMI_COMA
   70       | type IDENTIFIER Multi . SEMI_COMA
   71       | type IDENTIFIER Multi . EQUAL OPEN_S array_body2 CLOSE_S SEMI_COMA
   73 Multi: Multi . OPEN_ARR INT_VAL CLOSE_ARR

    SEMI_COMA  shift, and go to state 243
    EQUAL      shift, and go to state 244
    OPEN_ARR   shift, and go to state 245


state 183

   23 ids_list: ids_list error IDENTIFIER .

    $default  reduce using rule 23 (ids_list)


state 184

   24 ids_list: ids_list COMMA IDENTIFIER .

    $default  reduce using rule 24 (ids_list)


state 185

   99 p_type: error type CLOSE_P .

    $default  reduce using rule 99 (p_type)


state 186

  102 method_selector: IDENTIFIER SEMI_COLUMN @1 . parameter_list

    error   shift, and go to state 77
    OPEN_P  shift, and go to state 79

    p_type          go to state 246
    parameter_list  go to state 247
    parameter       go to state 248


state 187

  100 p_type: OPEN_P type error .

    $default  reduce using rule 100 (p_type)


state 188

   98 p_type: OPEN_P type CLOSE_P .

    $default  reduce using rule 98 (p_type)


state 189

   91 class_method_declaration: PLUS p_type method_selector error .

    $default  reduce using rule 91 (class_method_declaration)


state 190

   90 class_method_declaration: PLUS p_type method_selector SEMI_COMA .

    $default  reduce using rule 90 (class_method_declaration)


state 191

   96 instance_method_declaration: MINUS p_type method_selector error .

    $default  reduce using rule 96 (instance_method_declaration)


state 192

   94 instance_method_declaration: MINUS p_type method_selector SEMI_COMA .

    $default  reduce using rule 94 (instance_method_declaration)


state 193

   13 class_interface_body: protocol_reference_list instance_variables interface_declaration_list AT_END .

    $default  reduce using rule 13 (class_interface_body)


state 194

  189 long_id: long_id . DOT IDENTIFIER
  196 simple_expr: long_id .

    DOT  shift, and go to state 225

    $default  reduce using rule 196 (simple_expr)


state 195

  197 simple_expr: simple_expr . PLUS simple_expr
  198            | simple_expr . MINUS simple_expr
  199            | simple_expr . MULTI simple_expr
  200            | simple_expr . DIV simple_expr
  201            | OPEN_P simple_expr . CLOSE_P

    PLUS     shift, and go to state 226
    MINUS    shift, and go to state 227
    CLOSE_P  shift, and go to state 249
    MULTI    shift, and go to state 228
    DIV      shift, and go to state 229


state 196

  146 for_loop_header: FOR error . for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  150                | FOR error . SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P

    IDENTIFIER  shift, and go to state 197
    INT         shift, and go to state 198
    SEMI_COMA   shift, and go to state 250

    for_initializer  go to state 251


state 197

  160 for_initializer: IDENTIFIER . EQUAL expr
  161                | IDENTIFIER . expr
  162                | IDENTIFIER . error expr
  163                | IDENTIFIER .

    error       shift, and go to state 252
    IDENTIFIER  shift, and go to state 203
    OPEN_P      shift, and go to state 141
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    EQUAL       shift, and go to state 253
    OPEN_ARR    shift, and go to state 149

    SEMI_COMA  reduce using rule 163 (for_initializer)

    p_type        go to state 154
    expr          go to state 254
    assign_expr   go to state 163
    long_id       go to state 164
    simple_expr   go to state 165
    message_call  go to state 172


state 198

  157 for_initializer: INT . IDENTIFIER EQUAL expr
  158                | INT . IDENTIFIER expr
  159                | INT . IDENTIFIER error expr

    IDENTIFIER  shift, and go to state 255


state 199

  149 for_loop_header: FOR SEMI_COMA . logic_expr SEMI_COMA expr CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 203
    OPEN_P      shift, and go to state 256
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    NOT_EQUAL   shift, and go to state 205
    OPEN_ARR    shift, and go to state 149

    p_type        go to state 154
    logic_expr    go to state 257
    expr          go to state 207
    assign_expr   go to state 163
    long_id       go to state 164
    simple_expr   go to state 165
    message_call  go to state 172


state 200

  143 for_loop_header: FOR OPEN_P . for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  144                | FOR OPEN_P . for_initializer SEMI_COMA logic_expr SEMI_COMA expr error
  147                | FOR OPEN_P . SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  148                | FOR OPEN_P . SEMI_COMA logic_expr SEMI_COMA expr error
  151                | FOR OPEN_P . for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  152                | FOR OPEN_P . for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  153                | FOR OPEN_P . for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  154                | FOR OPEN_P . SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  155                | FOR OPEN_P . SEMI_COMA SEMI_COMA expr CLOSE_P
  156                | FOR OPEN_P . SEMI_COMA SEMI_COMA CLOSE_P

    IDENTIFIER  shift, and go to state 197
    INT         shift, and go to state 198
    SEMI_COMA   shift, and go to state 258

    for_initializer  go to state 259


state 201

  145 for_loop_header: FOR for_initializer . SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P

    SEMI_COMA  shift, and go to state 260


state 202

   99 p_type: error . type CLOSE_P
  209 while_loop_header: WHILE error . logic_expr CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 139
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 256
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    NOT_EQUAL   shift, and go to state 205
    OPEN_ARR    shift, and go to state 149

    type          go to state 123
    simple_type   go to state 73
    complex_type  go to state 74
    p_type        go to state 154
    logic_expr    go to state 261
    expr          go to state 207
    assign_expr   go to state 163
    long_id       go to state 164
    simple_expr   go to state 165
    message_call  go to state 172


state 203

  191 long_id: IDENTIFIER .

    $default  reduce using rule 191 (long_id)


state 204

   98 p_type: OPEN_P . type CLOSE_P
  100       | OPEN_P . type error
  170 logic_expr: OPEN_P . logic_expr CLOSE_P
  201 simple_expr: OPEN_P . simple_expr CLOSE_P
  206 while_loop_header: WHILE OPEN_P . logic_expr CLOSE_P
  207                  | WHILE OPEN_P . logic_expr error

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 139
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 256
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    NOT_EQUAL   shift, and go to state 205
    OPEN_ARR    shift, and go to state 149

    type          go to state 125
    simple_type   go to state 73
    complex_type  go to state 74
    p_type        go to state 154
    logic_expr    go to state 262
    expr          go to state 207
    assign_expr   go to state 163
    long_id       go to state 164
    simple_expr   go to state 263
    message_call  go to state 172


state 205

  169 logic_expr: NOT_EQUAL . expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 203
    OPEN_P      shift, and go to state 141
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    OPEN_ARR    shift, and go to state 149

    p_type        go to state 154
    expr          go to state 264
    assign_expr   go to state 163
    long_id       go to state 164
    simple_expr   go to state 165
    message_call  go to state 172


state 206

  171 logic_expr: logic_expr . AND_AND logic_expr
  172           | logic_expr . OR_OR logic_expr
  208 while_loop_header: WHILE logic_expr . CLOSE_P

    CLOSE_P  shift, and go to state 265
    AND_AND  shift, and go to state 266
    OR_OR    shift, and go to state 267


state 207

  164 logic_expr: expr . LESS_THAN expr
  165           | expr . MORE_THAN expr
  166           | expr . LESS_OR_EQUAL expr
  167           | expr . MORE_OR_EQUAL expr
  168           | expr . EQUAL_EQUAL expr

    LESS_THAN      shift, and go to state 268
    MORE_THAN      shift, and go to state 269
    LESS_OR_EQUAL  shift, and go to state 270
    MORE_OR_EQUAL  shift, and go to state 271
    EQUAL_EQUAL    shift, and go to state 272


state 208

   99 p_type: error . type CLOSE_P
  230 if_header: IF error . logic_expr CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 139
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 256
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    NOT_EQUAL   shift, and go to state 205
    OPEN_ARR    shift, and go to state 149

    type          go to state 123
    simple_type   go to state 73
    complex_type  go to state 74
    p_type        go to state 154
    logic_expr    go to state 273
    expr          go to state 207
    assign_expr   go to state 163
    long_id       go to state 164
    simple_expr   go to state 165
    message_call  go to state 172


state 209

   98 p_type: OPEN_P . type CLOSE_P
  100       | OPEN_P . type error
  170 logic_expr: OPEN_P . logic_expr CLOSE_P
  201 simple_expr: OPEN_P . simple_expr CLOSE_P
  227 if_header: IF OPEN_P . logic_expr CLOSE_P
  228          | IF OPEN_P . logic_expr error

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 139
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 256
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    NOT_EQUAL   shift, and go to state 205
    OPEN_ARR    shift, and go to state 149

    type          go to state 125
    simple_type   go to state 73
    complex_type  go to state 74
    p_type        go to state 154
    logic_expr    go to state 274
    expr          go to state 207
    assign_expr   go to state 163
    long_id       go to state 164
    simple_expr   go to state 263
    message_call  go to state 172


state 210

  171 logic_expr: logic_expr . AND_AND logic_expr
  172           | logic_expr . OR_OR logic_expr
  229 if_header: IF logic_expr . CLOSE_P

    CLOSE_P  shift, and go to state 275
    AND_AND  shift, and go to state 266
    OR_OR    shift, and go to state 267


state 211

  233 sender: IDENTIFIER .

    $default  reduce using rule 233 (sender)


state 212

  232 sender: message_call .

    $default  reduce using rule 232 (sender)


state 213

  231 message_call: OPEN_ARR sender . message CLOSE_ARR

    IDENTIFIER  shift, and go to state 276

    message  go to state 277


state 214

  137 return_statement: RETURN expr . SEMI_COMA
  138                 | RETURN expr . error

    error      shift, and go to state 278
    SEMI_COMA  shift, and go to state 279


state 215

  210 do_while_loop: DO statement . while_loop_header SEMI_COMA

    WHILE  shift, and go to state 147

    while_loop_header  go to state 280


state 216

  215 switch: SWITCH error . switch_statement CLOSE_P OPEN_S switch_body CLOSE_S

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 203
    OPEN_P      shift, and go to state 256
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    NOT_EQUAL   shift, and go to state 205
    OPEN_ARR    shift, and go to state 149

    p_type            go to state 154
    logic_expr        go to state 281
    expr              go to state 282
    assign_expr       go to state 163
    long_id           go to state 164
    simple_expr       go to state 165
    switch_statement  go to state 283
    message_call      go to state 172


state 217

  214 switch: SWITCH OPEN_P . switch_statement CLOSE_P OPEN_S switch_body CLOSE_S
  216       | SWITCH OPEN_P . switch_statement error OPEN_S switch_body CLOSE_S
  217       | SWITCH OPEN_P . switch_statement CLOSE_P OPEN_S switch_body error
  218       | SWITCH OPEN_P . switch_statement CLOSE_P error switch_body CLOSE_S

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 203
    OPEN_P      shift, and go to state 256
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    NOT_EQUAL   shift, and go to state 205
    OPEN_ARR    shift, and go to state 149

    p_type            go to state 154
    logic_expr        go to state 281
    expr              go to state 282
    assign_expr       go to state 163
    long_id           go to state 164
    simple_expr       go to state 165
    switch_statement  go to state 284
    message_call      go to state 172


state 218

  197 simple_expr: simple_expr . PLUS simple_expr
  198            | simple_expr . MINUS simple_expr
  199            | simple_expr . MULTI simple_expr
  200            | simple_expr . DIV simple_expr
  202            | p_type simple_expr .

    PLUS   shift, and go to state 226
    MINUS  shift, and go to state 227
    MULTI  shift, and go to state 228
    DIV    shift, and go to state 229

    $default  reduce using rule 202 (simple_expr)


state 219

  203 block_body: OPEN_S statement_list CLOSE_S .

    $default  reduce using rule 203 (block_body)


state 220

  128 statement_list: statement_list statement .

    $default  reduce using rule 128 (statement_list)


state 221

  135 statement: @2 block_body .

    $default  reduce using rule 135 (statement)


state 222

  142 for_loop: for_loop_header statement .

    $default  reduce using rule 142 (for_loop)


state 223

  132 statement: expr SEMI_COMA .

    $default  reduce using rule 132 (statement)


state 224

  188 assign_expr: long_id EQUAL . simple_expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 203
    OPEN_P      shift, and go to state 141
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    OPEN_ARR    shift, and go to state 149

    p_type        go to state 154
    long_id       go to state 194
    simple_expr   go to state 285
    message_call  go to state 172


state 225

  189 long_id: long_id DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 286


state 226

  197 simple_expr: simple_expr PLUS . simple_expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 203
    OPEN_P      shift, and go to state 141
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    OPEN_ARR    shift, and go to state 149

    p_type        go to state 154
    long_id       go to state 194
    simple_expr   go to state 287
    message_call  go to state 172


state 227

  198 simple_expr: simple_expr MINUS . simple_expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 203
    OPEN_P      shift, and go to state 141
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    OPEN_ARR    shift, and go to state 149

    p_type        go to state 154
    long_id       go to state 194
    simple_expr   go to state 288
    message_call  go to state 172


state 228

  199 simple_expr: simple_expr MULTI . simple_expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 203
    OPEN_P      shift, and go to state 141
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    OPEN_ARR    shift, and go to state 149

    p_type        go to state 154
    long_id       go to state 194
    simple_expr   go to state 289
    message_call  go to state 172


state 229

  200 simple_expr: simple_expr DIV . simple_expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 203
    OPEN_P      shift, and go to state 141
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    OPEN_ARR    shift, and go to state 149

    p_type        go to state 154
    long_id       go to state 194
    simple_expr   go to state 290
    message_call  go to state 172


state 230

  205 while_loop: while_loop_header statement .

    $default  reduce using rule 205 (while_loop)


state 231

  211 conditional_statement: if_header statement .
  212                      | if_header statement . ELSE statement

    ELSE  shift, and go to state 291

    $default  reduce using rule 211 (conditional_statement)


state 232

   42 variable_declaration: CONST type IDENTIFIER error .

    $default  reduce using rule 42 (variable_declaration)


state 233

   41 variable_declaration: CONST type IDENTIFIER SEMI_COMA .

    $default  reduce using rule 41 (variable_declaration)


state 234

   43 variable_declaration: CONST type IDENTIFIER EQUAL . simple_expr SEMI_COMA
   44                     | CONST type IDENTIFIER EQUAL . simple_expr error

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 203
    OPEN_P      shift, and go to state 141
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    OPEN_ARR    shift, and go to state 149

    p_type        go to state 154
    long_id       go to state 194
    simple_expr   go to state 292
    message_call  go to state 172


state 235

   58 variable_declarations: CONST . type IDENTIFIER SEMI_COMA
   60                      | CONST . type IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA

    IDENTIFIER  shift, and go to state 50
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59

    type          go to state 293
    simple_type   go to state 73
    complex_type  go to state 74


state 236

   51 structrule: STRUCT IDENTIFIER OPEN_S variable_declarations . CLOSE_S SEMI_COMA
   52           | STRUCT IDENTIFIER OPEN_S variable_declarations . CLOSE_S ids_list SEMI_COMA
   54 variable_declarations: variable_declarations . type IDENTIFIER SEMI_COMA
   56                      | variable_declarations . type IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA
   57                      | variable_declarations . CONST type IDENTIFIER SEMI_COMA
   59                      | variable_declarations . CONST type IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA

    IDENTIFIER  shift, and go to state 50
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    CLOSE_S     shift, and go to state 294
    CONST       shift, and go to state 295
    VOID        shift, and go to state 59

    type          go to state 296
    simple_type   go to state 73
    complex_type  go to state 74


state 237

   53 variable_declarations: type . IDENTIFIER SEMI_COMA
   55                      | type . IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA

    IDENTIFIER  shift, and go to state 297


state 238

   23 ids_list: ids_list . error IDENTIFIER
   24         | ids_list . COMMA IDENTIFIER
   50 Enum: TYPEDEF ENUM OPEN_S ids_list . CLOSE_S IDENTIFIER SEMI_COMA

    error    shift, and go to state 120
    CLOSE_S  shift, and go to state 298
    COMMA    shift, and go to state 121


state 239

   49 Enum: ENUM OPEN_S ids_list CLOSE_S . IDENTIFIER SEMI_COMA

    IDENTIFIER  shift, and go to state 299


state 240

   39 variable_declaration: type IDENTIFIER EQUAL simple_expr . SEMI_COMA
   40                     | type IDENTIFIER EQUAL simple_expr . error
  197 simple_expr: simple_expr . PLUS simple_expr
  198            | simple_expr . MINUS simple_expr
  199            | simple_expr . MULTI simple_expr
  200            | simple_expr . DIV simple_expr

    error      shift, and go to state 300
    SEMI_COMA  shift, and go to state 301
    PLUS       shift, and go to state 226
    MINUS      shift, and go to state 227
    MULTI      shift, and go to state 228
    DIV        shift, and go to state 229


state 241

   61 ArrayOne: type IDENTIFIER OPEN_ARR INT_VAL . CLOSE_ARR EQUAL OPEN_S CLOSE_S SEMI_COMA
   62         | type IDENTIFIER OPEN_ARR INT_VAL . CLOSE_ARR SEMI_COMA
   63         | type IDENTIFIER OPEN_ARR INT_VAL . CLOSE_ARR EQUAL OPEN_S array_body CLOSE_S SEMI_COMA
   72 Multi: OPEN_ARR INT_VAL . CLOSE_ARR OPEN_ARR INT_VAL CLOSE_ARR

    CLOSE_ARR  shift, and go to state 302


state 242

   64 ArrayOne: type IDENTIFIER OPEN_ARR CLOSE_ARR . EQUAL OPEN_S array_body CLOSE_S SEMI_COMA

    EQUAL  shift, and go to state 303


state 243

   70 ArrayN: type IDENTIFIER Multi SEMI_COMA .

    $default  reduce using rule 70 (ArrayN)


state 244

   69 ArrayN: type IDENTIFIER Multi EQUAL . OPEN_S CLOSE_S SEMI_COMA
   71       | type IDENTIFIER Multi EQUAL . OPEN_S array_body2 CLOSE_S SEMI_COMA

    OPEN_S  shift, and go to state 304


state 245

   73 Multi: Multi OPEN_ARR . INT_VAL CLOSE_ARR

    INT_VAL  shift, and go to state 305


state 246

  109 parameter: p_type . IDENTIFIER

    IDENTIFIER  shift, and go to state 306


state 247

  102 method_selector: IDENTIFIER SEMI_COLUMN @1 parameter_list .
  104 parameter_list: parameter_list . SEMI_COLUMN parameter
  105               | parameter_list . IDENTIFIER SEMI_COLUMN parameter
  106               | parameter_list . IDENTIFIER error parameter
  107               | parameter_list . IDENTIFIER parameter

    IDENTIFIER   shift, and go to state 307
    SEMI_COLUMN  shift, and go to state 308

    $default  reduce using rule 102 (method_selector)


state 248

  108 parameter_list: parameter .

    $default  reduce using rule 108 (parameter_list)


state 249

  201 simple_expr: OPEN_P simple_expr CLOSE_P .

    $default  reduce using rule 201 (simple_expr)


state 250

  150 for_loop_header: FOR error SEMI_COMA . logic_expr SEMI_COMA expr CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 203
    OPEN_P      shift, and go to state 256
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    NOT_EQUAL   shift, and go to state 205
    OPEN_ARR    shift, and go to state 149

    p_type        go to state 154
    logic_expr    go to state 309
    expr          go to state 207
    assign_expr   go to state 163
    long_id       go to state 164
    simple_expr   go to state 165
    message_call  go to state 172


state 251

  146 for_loop_header: FOR error for_initializer . SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P

    SEMI_COMA  shift, and go to state 310


state 252

   99 p_type: error . type CLOSE_P
  162 for_initializer: IDENTIFIER error . expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 139
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 141
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    OPEN_ARR    shift, and go to state 149

    type          go to state 123
    simple_type   go to state 73
    complex_type  go to state 74
    p_type        go to state 154
    expr          go to state 311
    assign_expr   go to state 163
    long_id       go to state 164
    simple_expr   go to state 165
    message_call  go to state 172


state 253

  160 for_initializer: IDENTIFIER EQUAL . expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 203
    OPEN_P      shift, and go to state 141
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    OPEN_ARR    shift, and go to state 149

    p_type        go to state 154
    expr          go to state 312
    assign_expr   go to state 163
    long_id       go to state 164
    simple_expr   go to state 165
    message_call  go to state 172


state 254

  161 for_initializer: IDENTIFIER expr .

    $default  reduce using rule 161 (for_initializer)


state 255

  157 for_initializer: INT IDENTIFIER . EQUAL expr
  158                | INT IDENTIFIER . expr
  159                | INT IDENTIFIER . error expr

    error       shift, and go to state 313
    IDENTIFIER  shift, and go to state 203
    OPEN_P      shift, and go to state 141
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    EQUAL       shift, and go to state 314
    OPEN_ARR    shift, and go to state 149

    p_type        go to state 154
    expr          go to state 315
    assign_expr   go to state 163
    long_id       go to state 164
    simple_expr   go to state 165
    message_call  go to state 172


state 256

   98 p_type: OPEN_P . type CLOSE_P
  100       | OPEN_P . type error
  170 logic_expr: OPEN_P . logic_expr CLOSE_P
  201 simple_expr: OPEN_P . simple_expr CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 139
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 256
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    NOT_EQUAL   shift, and go to state 205
    OPEN_ARR    shift, and go to state 149

    type          go to state 125
    simple_type   go to state 73
    complex_type  go to state 74
    p_type        go to state 154
    logic_expr    go to state 316
    expr          go to state 207
    assign_expr   go to state 163
    long_id       go to state 164
    simple_expr   go to state 263
    message_call  go to state 172


state 257

  149 for_loop_header: FOR SEMI_COMA logic_expr . SEMI_COMA expr CLOSE_P
  171 logic_expr: logic_expr . AND_AND logic_expr
  172           | logic_expr . OR_OR logic_expr

    SEMI_COMA  shift, and go to state 317
    AND_AND    shift, and go to state 266
    OR_OR      shift, and go to state 267


state 258

  147 for_loop_header: FOR OPEN_P SEMI_COMA . logic_expr SEMI_COMA expr CLOSE_P
  148                | FOR OPEN_P SEMI_COMA . logic_expr SEMI_COMA expr error
  154                | FOR OPEN_P SEMI_COMA . logic_expr SEMI_COMA CLOSE_P
  155                | FOR OPEN_P SEMI_COMA . SEMI_COMA expr CLOSE_P
  156                | FOR OPEN_P SEMI_COMA . SEMI_COMA CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 203
    SEMI_COMA   shift, and go to state 318
    OPEN_P      shift, and go to state 256
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    NOT_EQUAL   shift, and go to state 205
    OPEN_ARR    shift, and go to state 149

    p_type        go to state 154
    logic_expr    go to state 319
    expr          go to state 207
    assign_expr   go to state 163
    long_id       go to state 164
    simple_expr   go to state 165
    message_call  go to state 172


state 259

  143 for_loop_header: FOR OPEN_P for_initializer . SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  144                | FOR OPEN_P for_initializer . SEMI_COMA logic_expr SEMI_COMA expr error
  151                | FOR OPEN_P for_initializer . SEMI_COMA SEMI_COMA expr CLOSE_P
  152                | FOR OPEN_P for_initializer . SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  153                | FOR OPEN_P for_initializer . SEMI_COMA SEMI_COMA CLOSE_P

    SEMI_COMA  shift, and go to state 320


state 260

  145 for_loop_header: FOR for_initializer SEMI_COMA . logic_expr SEMI_COMA expr CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 203
    OPEN_P      shift, and go to state 256
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    NOT_EQUAL   shift, and go to state 205
    OPEN_ARR    shift, and go to state 149

    p_type        go to state 154
    logic_expr    go to state 321
    expr          go to state 207
    assign_expr   go to state 163
    long_id       go to state 164
    simple_expr   go to state 165
    message_call  go to state 172


state 261

  171 logic_expr: logic_expr . AND_AND logic_expr
  172           | logic_expr . OR_OR logic_expr
  209 while_loop_header: WHILE error logic_expr . CLOSE_P

    CLOSE_P  shift, and go to state 322
    AND_AND  shift, and go to state 266
    OR_OR    shift, and go to state 267


state 262

  170 logic_expr: OPEN_P logic_expr . CLOSE_P
  171           | logic_expr . AND_AND logic_expr
  172           | logic_expr . OR_OR logic_expr
  206 while_loop_header: WHILE OPEN_P logic_expr . CLOSE_P
  207                  | WHILE OPEN_P logic_expr . error

    error    shift, and go to state 323
    CLOSE_P  shift, and go to state 324
    AND_AND  shift, and go to state 266
    OR_OR    shift, and go to state 267


state 263

  174 expr: simple_expr .
  197 simple_expr: simple_expr . PLUS simple_expr
  198            | simple_expr . MINUS simple_expr
  199            | simple_expr . MULTI simple_expr
  200            | simple_expr . DIV simple_expr
  201            | OPEN_P simple_expr . CLOSE_P

    PLUS     shift, and go to state 226
    MINUS    shift, and go to state 227
    CLOSE_P  shift, and go to state 249
    MULTI    shift, and go to state 228
    DIV      shift, and go to state 229

    $default  reduce using rule 174 (expr)


state 264

  169 logic_expr: NOT_EQUAL expr .

    $default  reduce using rule 169 (logic_expr)


state 265

  208 while_loop_header: WHILE logic_expr CLOSE_P .

    $default  reduce using rule 208 (while_loop_header)


state 266

  171 logic_expr: logic_expr AND_AND . logic_expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 203
    OPEN_P      shift, and go to state 256
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    NOT_EQUAL   shift, and go to state 205
    OPEN_ARR    shift, and go to state 149

    p_type        go to state 154
    logic_expr    go to state 325
    expr          go to state 207
    assign_expr   go to state 163
    long_id       go to state 164
    simple_expr   go to state 165
    message_call  go to state 172


state 267

  172 logic_expr: logic_expr OR_OR . logic_expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 203
    OPEN_P      shift, and go to state 256
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    NOT_EQUAL   shift, and go to state 205
    OPEN_ARR    shift, and go to state 149

    p_type        go to state 154
    logic_expr    go to state 326
    expr          go to state 207
    assign_expr   go to state 163
    long_id       go to state 164
    simple_expr   go to state 165
    message_call  go to state 172


state 268

  164 logic_expr: expr LESS_THAN . expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 203
    OPEN_P      shift, and go to state 141
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    OPEN_ARR    shift, and go to state 149

    p_type        go to state 154
    expr          go to state 327
    assign_expr   go to state 163
    long_id       go to state 164
    simple_expr   go to state 165
    message_call  go to state 172


state 269

  165 logic_expr: expr MORE_THAN . expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 203
    OPEN_P      shift, and go to state 141
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    OPEN_ARR    shift, and go to state 149

    p_type        go to state 154
    expr          go to state 328
    assign_expr   go to state 163
    long_id       go to state 164
    simple_expr   go to state 165
    message_call  go to state 172


state 270

  166 logic_expr: expr LESS_OR_EQUAL . expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 203
    OPEN_P      shift, and go to state 141
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    OPEN_ARR    shift, and go to state 149

    p_type        go to state 154
    expr          go to state 329
    assign_expr   go to state 163
    long_id       go to state 164
    simple_expr   go to state 165
    message_call  go to state 172


state 271

  167 logic_expr: expr MORE_OR_EQUAL . expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 203
    OPEN_P      shift, and go to state 141
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    OPEN_ARR    shift, and go to state 149

    p_type        go to state 154
    expr          go to state 330
    assign_expr   go to state 163
    long_id       go to state 164
    simple_expr   go to state 165
    message_call  go to state 172


state 272

  168 logic_expr: expr EQUAL_EQUAL . expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 203
    OPEN_P      shift, and go to state 141
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    OPEN_ARR    shift, and go to state 149

    p_type        go to state 154
    expr          go to state 331
    assign_expr   go to state 163
    long_id       go to state 164
    simple_expr   go to state 165
    message_call  go to state 172


state 273

  171 logic_expr: logic_expr . AND_AND logic_expr
  172           | logic_expr . OR_OR logic_expr
  230 if_header: IF error logic_expr . CLOSE_P

    CLOSE_P  shift, and go to state 332
    AND_AND  shift, and go to state 266
    OR_OR    shift, and go to state 267


state 274

  170 logic_expr: OPEN_P logic_expr . CLOSE_P
  171           | logic_expr . AND_AND logic_expr
  172           | logic_expr . OR_OR logic_expr
  227 if_header: IF OPEN_P logic_expr . CLOSE_P
  228          | IF OPEN_P logic_expr . error

    error    shift, and go to state 333
    CLOSE_P  shift, and go to state 334
    AND_AND  shift, and go to state 266
    OR_OR    shift, and go to state 267


state 275

  229 if_header: IF logic_expr CLOSE_P .

    $default  reduce using rule 229 (if_header)


state 276

  234 message: IDENTIFIER .
  235        | IDENTIFIER . SEMI_COLUMN argument_list

    SEMI_COLUMN  shift, and go to state 335

    $default  reduce using rule 234 (message)


state 277

  231 message_call: OPEN_ARR sender message . CLOSE_ARR

    CLOSE_ARR  shift, and go to state 336


state 278

  138 return_statement: RETURN expr error .

    $default  reduce using rule 138 (return_statement)


state 279

  137 return_statement: RETURN expr SEMI_COMA .

    $default  reduce using rule 137 (return_statement)


state 280

  210 do_while_loop: DO statement while_loop_header . SEMI_COMA

    SEMI_COMA  shift, and go to state 337


state 281

  171 logic_expr: logic_expr . AND_AND logic_expr
  172           | logic_expr . OR_OR logic_expr
  223 switch_statement: logic_expr .

    AND_AND  shift, and go to state 266
    OR_OR    shift, and go to state 267

    $default  reduce using rule 223 (switch_statement)


state 282

  164 logic_expr: expr . LESS_THAN expr
  165           | expr . MORE_THAN expr
  166           | expr . LESS_OR_EQUAL expr
  167           | expr . MORE_OR_EQUAL expr
  168           | expr . EQUAL_EQUAL expr
  224 switch_statement: expr .

    LESS_THAN      shift, and go to state 268
    MORE_THAN      shift, and go to state 269
    LESS_OR_EQUAL  shift, and go to state 270
    MORE_OR_EQUAL  shift, and go to state 271
    EQUAL_EQUAL    shift, and go to state 272

    $default  reduce using rule 224 (switch_statement)


state 283

  215 switch: SWITCH error switch_statement . CLOSE_P OPEN_S switch_body CLOSE_S

    CLOSE_P  shift, and go to state 338


state 284

  214 switch: SWITCH OPEN_P switch_statement . CLOSE_P OPEN_S switch_body CLOSE_S
  216       | SWITCH OPEN_P switch_statement . error OPEN_S switch_body CLOSE_S
  217       | SWITCH OPEN_P switch_statement . CLOSE_P OPEN_S switch_body error
  218       | SWITCH OPEN_P switch_statement . CLOSE_P error switch_body CLOSE_S

    error    shift, and go to state 339
    CLOSE_P  shift, and go to state 340


state 285

  188 assign_expr: long_id EQUAL simple_expr .
  197 simple_expr: simple_expr . PLUS simple_expr
  198            | simple_expr . MINUS simple_expr
  199            | simple_expr . MULTI simple_expr
  200            | simple_expr . DIV simple_expr

    PLUS   shift, and go to state 226
    MINUS  shift, and go to state 227
    MULTI  shift, and go to state 228
    DIV    shift, and go to state 229

    $default  reduce using rule 188 (assign_expr)


state 286

  189 long_id: long_id DOT IDENTIFIER .

    $default  reduce using rule 189 (long_id)


state 287

  197 simple_expr: simple_expr . PLUS simple_expr
  197            | simple_expr PLUS simple_expr .
  198            | simple_expr . MINUS simple_expr
  199            | simple_expr . MULTI simple_expr
  200            | simple_expr . DIV simple_expr

    MULTI  shift, and go to state 228
    DIV    shift, and go to state 229

    $default  reduce using rule 197 (simple_expr)


state 288

  197 simple_expr: simple_expr . PLUS simple_expr
  198            | simple_expr . MINUS simple_expr
  198            | simple_expr MINUS simple_expr .
  199            | simple_expr . MULTI simple_expr
  200            | simple_expr . DIV simple_expr

    MULTI  shift, and go to state 228
    DIV    shift, and go to state 229

    $default  reduce using rule 198 (simple_expr)


state 289

  197 simple_expr: simple_expr . PLUS simple_expr
  198            | simple_expr . MINUS simple_expr
  199            | simple_expr . MULTI simple_expr
  199            | simple_expr MULTI simple_expr .
  200            | simple_expr . DIV simple_expr

    $default  reduce using rule 199 (simple_expr)


state 290

  197 simple_expr: simple_expr . PLUS simple_expr
  198            | simple_expr . MINUS simple_expr
  199            | simple_expr . MULTI simple_expr
  200            | simple_expr . DIV simple_expr
  200            | simple_expr DIV simple_expr .

    $default  reduce using rule 200 (simple_expr)


state 291

  212 conditional_statement: if_header statement ELSE . statement

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 139
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    CONST       shift, and go to state 58
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 141
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    FOR         shift, and go to state 146
    WHILE       shift, and go to state 147
    IF          shift, and go to state 148
    OPEN_ARR    shift, and go to state 149
    RETURN      shift, and go to state 150
    DO          shift, and go to state 151
    SWITCH      shift, and go to state 152
    STRUCT      shift, and go to state 60
    TYPEDEF     shift, and go to state 61
    ENUM        shift, and go to state 62

    OPEN_S  reduce using rule 134 (@2)

    variable_declaration   go to state 153
    Enum                   go to state 68
    structrule             go to state 69
    ArrayOne               go to state 70
    ArrayN                 go to state 71
    type                   go to state 72
    simple_type            go to state 73
    complex_type           go to state 74
    p_type                 go to state 154
    statement              go to state 341
    @2                     go to state 157
    return_statement       go to state 158
    loop_statement         go to state 159
    for_loop               go to state 160
    for_loop_header        go to state 161
    expr                   go to state 162
    assign_expr            go to state 163
    long_id                go to state 164
    simple_expr            go to state 165
    while_loop             go to state 166
    while_loop_header      go to state 167
    do_while_loop          go to state 168
    conditional_statement  go to state 169
    switch                 go to state 170
    if_header              go to state 171
    message_call           go to state 172


state 292

   43 variable_declaration: CONST type IDENTIFIER EQUAL simple_expr . SEMI_COMA
   44                     | CONST type IDENTIFIER EQUAL simple_expr . error
  197 simple_expr: simple_expr . PLUS simple_expr
  198            | simple_expr . MINUS simple_expr
  199            | simple_expr . MULTI simple_expr
  200            | simple_expr . DIV simple_expr

    error      shift, and go to state 342
    SEMI_COMA  shift, and go to state 343
    PLUS       shift, and go to state 226
    MINUS      shift, and go to state 227
    MULTI      shift, and go to state 228
    DIV        shift, and go to state 229


state 293

   58 variable_declarations: CONST type . IDENTIFIER SEMI_COMA
   60                      | CONST type . IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA

    IDENTIFIER  shift, and go to state 344


state 294

   51 structrule: STRUCT IDENTIFIER OPEN_S variable_declarations CLOSE_S . SEMI_COMA
   52           | STRUCT IDENTIFIER OPEN_S variable_declarations CLOSE_S . ids_list SEMI_COMA

    IDENTIFIER  shift, and go to state 75
    SEMI_COMA   shift, and go to state 345

    ids_list  go to state 346


state 295

   57 variable_declarations: variable_declarations CONST . type IDENTIFIER SEMI_COMA
   59                      | variable_declarations CONST . type IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA

    IDENTIFIER  shift, and go to state 50
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59

    type          go to state 347
    simple_type   go to state 73
    complex_type  go to state 74


state 296

   54 variable_declarations: variable_declarations type . IDENTIFIER SEMI_COMA
   56                      | variable_declarations type . IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA

    IDENTIFIER  shift, and go to state 348


state 297

   53 variable_declarations: type IDENTIFIER . SEMI_COMA
   55                      | type IDENTIFIER . SEMI_COLUMN simple_expr SEMI_COMA

    SEMI_COLUMN  shift, and go to state 349
    SEMI_COMA    shift, and go to state 350


state 298

   50 Enum: TYPEDEF ENUM OPEN_S ids_list CLOSE_S . IDENTIFIER SEMI_COMA

    IDENTIFIER  shift, and go to state 351


state 299

   49 Enum: ENUM OPEN_S ids_list CLOSE_S IDENTIFIER . SEMI_COMA

    SEMI_COMA  shift, and go to state 352


state 300

   40 variable_declaration: type IDENTIFIER EQUAL simple_expr error .

    $default  reduce using rule 40 (variable_declaration)


state 301

   39 variable_declaration: type IDENTIFIER EQUAL simple_expr SEMI_COMA .

    $default  reduce using rule 39 (variable_declaration)


state 302

   61 ArrayOne: type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR . EQUAL OPEN_S CLOSE_S SEMI_COMA
   62         | type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR . SEMI_COMA
   63         | type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR . EQUAL OPEN_S array_body CLOSE_S SEMI_COMA
   72 Multi: OPEN_ARR INT_VAL CLOSE_ARR . OPEN_ARR INT_VAL CLOSE_ARR

    SEMI_COMA  shift, and go to state 353
    EQUAL      shift, and go to state 354
    OPEN_ARR   shift, and go to state 355


state 303

   64 ArrayOne: type IDENTIFIER OPEN_ARR CLOSE_ARR EQUAL . OPEN_S array_body CLOSE_S SEMI_COMA

    OPEN_S  shift, and go to state 356


state 304

   69 ArrayN: type IDENTIFIER Multi EQUAL OPEN_S . CLOSE_S SEMI_COMA
   71       | type IDENTIFIER Multi EQUAL OPEN_S . array_body2 CLOSE_S SEMI_COMA

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 203
    OPEN_S      shift, and go to state 357
    CLOSE_S     shift, and go to state 358
    OPEN_P      shift, and go to state 141
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    OPEN_ARR    shift, and go to state 149

    array_body2   go to state 359
    p_type        go to state 154
    expr          go to state 360
    assign_expr   go to state 163
    long_id       go to state 164
    simple_expr   go to state 165
    message_call  go to state 172


state 305

   73 Multi: Multi OPEN_ARR INT_VAL . CLOSE_ARR

    CLOSE_ARR  shift, and go to state 361


state 306

  109 parameter: p_type IDENTIFIER .

    $default  reduce using rule 109 (parameter)


state 307

  105 parameter_list: parameter_list IDENTIFIER . SEMI_COLUMN parameter
  106               | parameter_list IDENTIFIER . error parameter
  107               | parameter_list IDENTIFIER . parameter

    error        shift, and go to state 362
    SEMI_COLUMN  shift, and go to state 363
    OPEN_P       shift, and go to state 79

    p_type     go to state 246
    parameter  go to state 364


state 308

  104 parameter_list: parameter_list SEMI_COLUMN . parameter

    error   shift, and go to state 77
    OPEN_P  shift, and go to state 79

    p_type     go to state 246
    parameter  go to state 365


state 309

  150 for_loop_header: FOR error SEMI_COMA logic_expr . SEMI_COMA expr CLOSE_P
  171 logic_expr: logic_expr . AND_AND logic_expr
  172           | logic_expr . OR_OR logic_expr

    SEMI_COMA  shift, and go to state 366
    AND_AND    shift, and go to state 266
    OR_OR      shift, and go to state 267


state 310

  146 for_loop_header: FOR error for_initializer SEMI_COMA . logic_expr SEMI_COMA expr CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 203
    OPEN_P      shift, and go to state 256
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    NOT_EQUAL   shift, and go to state 205
    OPEN_ARR    shift, and go to state 149

    p_type        go to state 154
    logic_expr    go to state 367
    expr          go to state 207
    assign_expr   go to state 163
    long_id       go to state 164
    simple_expr   go to state 165
    message_call  go to state 172


state 311

  162 for_initializer: IDENTIFIER error expr .

    $default  reduce using rule 162 (for_initializer)


state 312

  160 for_initializer: IDENTIFIER EQUAL expr .

    $default  reduce using rule 160 (for_initializer)


state 313

   99 p_type: error . type CLOSE_P
  159 for_initializer: INT IDENTIFIER error . expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 139
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 141
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    OPEN_ARR    shift, and go to state 149

    type          go to state 123
    simple_type   go to state 73
    complex_type  go to state 74
    p_type        go to state 154
    expr          go to state 368
    assign_expr   go to state 163
    long_id       go to state 164
    simple_expr   go to state 165
    message_call  go to state 172


state 314

  157 for_initializer: INT IDENTIFIER EQUAL . expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 203
    OPEN_P      shift, and go to state 141
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    OPEN_ARR    shift, and go to state 149

    p_type        go to state 154
    expr          go to state 369
    assign_expr   go to state 163
    long_id       go to state 164
    simple_expr   go to state 165
    message_call  go to state 172


state 315

  158 for_initializer: INT IDENTIFIER expr .

    $default  reduce using rule 158 (for_initializer)


state 316

  170 logic_expr: OPEN_P logic_expr . CLOSE_P
  171           | logic_expr . AND_AND logic_expr
  172           | logic_expr . OR_OR logic_expr

    CLOSE_P  shift, and go to state 370
    AND_AND  shift, and go to state 266
    OR_OR    shift, and go to state 267


state 317

  149 for_loop_header: FOR SEMI_COMA logic_expr SEMI_COMA . expr CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 203
    OPEN_P      shift, and go to state 141
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    OPEN_ARR    shift, and go to state 149

    p_type        go to state 154
    expr          go to state 371
    assign_expr   go to state 163
    long_id       go to state 164
    simple_expr   go to state 165
    message_call  go to state 172


state 318

  155 for_loop_header: FOR OPEN_P SEMI_COMA SEMI_COMA . expr CLOSE_P
  156                | FOR OPEN_P SEMI_COMA SEMI_COMA . CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 203
    OPEN_P      shift, and go to state 141
    CLOSE_P     shift, and go to state 372
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    OPEN_ARR    shift, and go to state 149

    p_type        go to state 154
    expr          go to state 373
    assign_expr   go to state 163
    long_id       go to state 164
    simple_expr   go to state 165
    message_call  go to state 172


state 319

  147 for_loop_header: FOR OPEN_P SEMI_COMA logic_expr . SEMI_COMA expr CLOSE_P
  148                | FOR OPEN_P SEMI_COMA logic_expr . SEMI_COMA expr error
  154                | FOR OPEN_P SEMI_COMA logic_expr . SEMI_COMA CLOSE_P
  171 logic_expr: logic_expr . AND_AND logic_expr
  172           | logic_expr . OR_OR logic_expr

    SEMI_COMA  shift, and go to state 374
    AND_AND    shift, and go to state 266
    OR_OR      shift, and go to state 267


state 320

  143 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA . logic_expr SEMI_COMA expr CLOSE_P
  144                | FOR OPEN_P for_initializer SEMI_COMA . logic_expr SEMI_COMA expr error
  151                | FOR OPEN_P for_initializer SEMI_COMA . SEMI_COMA expr CLOSE_P
  152                | FOR OPEN_P for_initializer SEMI_COMA . logic_expr SEMI_COMA CLOSE_P
  153                | FOR OPEN_P for_initializer SEMI_COMA . SEMI_COMA CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 203
    SEMI_COMA   shift, and go to state 375
    OPEN_P      shift, and go to state 256
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    NOT_EQUAL   shift, and go to state 205
    OPEN_ARR    shift, and go to state 149

    p_type        go to state 154
    logic_expr    go to state 376
    expr          go to state 207
    assign_expr   go to state 163
    long_id       go to state 164
    simple_expr   go to state 165
    message_call  go to state 172


state 321

  145 for_loop_header: FOR for_initializer SEMI_COMA logic_expr . SEMI_COMA expr CLOSE_P
  171 logic_expr: logic_expr . AND_AND logic_expr
  172           | logic_expr . OR_OR logic_expr

    SEMI_COMA  shift, and go to state 377
    AND_AND    shift, and go to state 266
    OR_OR      shift, and go to state 267


state 322

  209 while_loop_header: WHILE error logic_expr CLOSE_P .

    $default  reduce using rule 209 (while_loop_header)


state 323

  207 while_loop_header: WHILE OPEN_P logic_expr error .

    $default  reduce using rule 207 (while_loop_header)


state 324

  170 logic_expr: OPEN_P logic_expr CLOSE_P .
  206 while_loop_header: WHILE OPEN_P logic_expr CLOSE_P .

    CLOSE_P   reduce using rule 170 (logic_expr)
    AND_AND   reduce using rule 170 (logic_expr)
    OR_OR     reduce using rule 170 (logic_expr)
    $default  reduce using rule 206 (while_loop_header)


state 325

  171 logic_expr: logic_expr . AND_AND logic_expr
  171           | logic_expr AND_AND logic_expr .
  172           | logic_expr . OR_OR logic_expr

    AND_AND  error (nonassociative)
    OR_OR    error (nonassociative)

    $default  reduce using rule 171 (logic_expr)


state 326

  171 logic_expr: logic_expr . AND_AND logic_expr
  172           | logic_expr . OR_OR logic_expr
  172           | logic_expr OR_OR logic_expr .

    AND_AND  error (nonassociative)
    OR_OR    error (nonassociative)

    $default  reduce using rule 172 (logic_expr)


state 327

  164 logic_expr: expr LESS_THAN expr .

    $default  reduce using rule 164 (logic_expr)


state 328

  165 logic_expr: expr MORE_THAN expr .

    $default  reduce using rule 165 (logic_expr)


state 329

  166 logic_expr: expr LESS_OR_EQUAL expr .

    $default  reduce using rule 166 (logic_expr)


state 330

  167 logic_expr: expr MORE_OR_EQUAL expr .

    $default  reduce using rule 167 (logic_expr)


state 331

  168 logic_expr: expr EQUAL_EQUAL expr .

    $default  reduce using rule 168 (logic_expr)


state 332

  230 if_header: IF error logic_expr CLOSE_P .

    $default  reduce using rule 230 (if_header)


state 333

  228 if_header: IF OPEN_P logic_expr error .

    $default  reduce using rule 228 (if_header)


state 334

  170 logic_expr: OPEN_P logic_expr CLOSE_P .
  227 if_header: IF OPEN_P logic_expr CLOSE_P .

    CLOSE_P   reduce using rule 170 (logic_expr)
    AND_AND   reduce using rule 170 (logic_expr)
    OR_OR     reduce using rule 170 (logic_expr)
    $default  reduce using rule 227 (if_header)


state 335

  235 message: IDENTIFIER SEMI_COLUMN . argument_list

    error        shift, and go to state 378
    IDENTIFIER   shift, and go to state 379
    SEMI_COLUMN  shift, and go to state 380

    argument_list  go to state 381
    argument       go to state 382


state 336

  231 message_call: OPEN_ARR sender message CLOSE_ARR .

    $default  reduce using rule 231 (message_call)


state 337

  210 do_while_loop: DO statement while_loop_header SEMI_COMA .

    $default  reduce using rule 210 (do_while_loop)


state 338

  215 switch: SWITCH error switch_statement CLOSE_P . OPEN_S switch_body CLOSE_S

    OPEN_S  shift, and go to state 383


state 339

  216 switch: SWITCH OPEN_P switch_statement error . OPEN_S switch_body CLOSE_S

    OPEN_S  shift, and go to state 384


state 340

  214 switch: SWITCH OPEN_P switch_statement CLOSE_P . OPEN_S switch_body CLOSE_S
  217       | SWITCH OPEN_P switch_statement CLOSE_P . OPEN_S switch_body error
  218       | SWITCH OPEN_P switch_statement CLOSE_P . error switch_body CLOSE_S

    error   shift, and go to state 385
    OPEN_S  shift, and go to state 386


state 341

  212 conditional_statement: if_header statement ELSE statement .

    $default  reduce using rule 212 (conditional_statement)


state 342

   44 variable_declaration: CONST type IDENTIFIER EQUAL simple_expr error .

    $default  reduce using rule 44 (variable_declaration)


state 343

   43 variable_declaration: CONST type IDENTIFIER EQUAL simple_expr SEMI_COMA .

    $default  reduce using rule 43 (variable_declaration)


state 344

   58 variable_declarations: CONST type IDENTIFIER . SEMI_COMA
   60                      | CONST type IDENTIFIER . SEMI_COLUMN simple_expr SEMI_COMA

    SEMI_COLUMN  shift, and go to state 387
    SEMI_COMA    shift, and go to state 388


state 345

   51 structrule: STRUCT IDENTIFIER OPEN_S variable_declarations CLOSE_S SEMI_COMA .

    $default  reduce using rule 51 (structrule)


state 346

   23 ids_list: ids_list . error IDENTIFIER
   24         | ids_list . COMMA IDENTIFIER
   52 structrule: STRUCT IDENTIFIER OPEN_S variable_declarations CLOSE_S ids_list . SEMI_COMA

    error      shift, and go to state 120
    SEMI_COMA  shift, and go to state 389
    COMMA      shift, and go to state 121


state 347

   57 variable_declarations: variable_declarations CONST type . IDENTIFIER SEMI_COMA
   59                      | variable_declarations CONST type . IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA

    IDENTIFIER  shift, and go to state 390


state 348

   54 variable_declarations: variable_declarations type IDENTIFIER . SEMI_COMA
   56                      | variable_declarations type IDENTIFIER . SEMI_COLUMN simple_expr SEMI_COMA

    SEMI_COLUMN  shift, and go to state 391
    SEMI_COMA    shift, and go to state 392


state 349

   55 variable_declarations: type IDENTIFIER SEMI_COLUMN . simple_expr SEMI_COMA

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 203
    OPEN_P      shift, and go to state 141
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    OPEN_ARR    shift, and go to state 149

    p_type        go to state 154
    long_id       go to state 194
    simple_expr   go to state 393
    message_call  go to state 172


state 350

   53 variable_declarations: type IDENTIFIER SEMI_COMA .

    $default  reduce using rule 53 (variable_declarations)


state 351

   50 Enum: TYPEDEF ENUM OPEN_S ids_list CLOSE_S IDENTIFIER . SEMI_COMA

    SEMI_COMA  shift, and go to state 394


state 352

   49 Enum: ENUM OPEN_S ids_list CLOSE_S IDENTIFIER SEMI_COMA .

    $default  reduce using rule 49 (Enum)


state 353

   62 ArrayOne: type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR SEMI_COMA .

    $default  reduce using rule 62 (ArrayOne)


state 354

   61 ArrayOne: type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR EQUAL . OPEN_S CLOSE_S SEMI_COMA
   63         | type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR EQUAL . OPEN_S array_body CLOSE_S SEMI_COMA

    OPEN_S  shift, and go to state 395


state 355

   72 Multi: OPEN_ARR INT_VAL CLOSE_ARR OPEN_ARR . INT_VAL CLOSE_ARR

    INT_VAL  shift, and go to state 396


state 356

   64 ArrayOne: type IDENTIFIER OPEN_ARR CLOSE_ARR EQUAL OPEN_S . array_body CLOSE_S SEMI_COMA

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 203
    OPEN_P      shift, and go to state 141
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    OPEN_ARR    shift, and go to state 397

    array_body    go to state 398
    p_type        go to state 154
    expr          go to state 399
    assign_expr   go to state 163
    long_id       go to state 164
    simple_expr   go to state 165
    message_call  go to state 172


state 357

   74 array_body2: OPEN_S . array_body CLOSE_S

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 203
    OPEN_P      shift, and go to state 141
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    OPEN_ARR    shift, and go to state 397

    array_body    go to state 400
    p_type        go to state 154
    expr          go to state 399
    assign_expr   go to state 163
    long_id       go to state 164
    simple_expr   go to state 165
    message_call  go to state 172


state 358

   69 ArrayN: type IDENTIFIER Multi EQUAL OPEN_S CLOSE_S . SEMI_COMA

    SEMI_COMA  shift, and go to state 401


state 359

   71 ArrayN: type IDENTIFIER Multi EQUAL OPEN_S array_body2 . CLOSE_S SEMI_COMA
   76 array_body2: array_body2 . COMMA OPEN_S array_body CLOSE_S
   77            | array_body2 . COMMA expr

    CLOSE_S  shift, and go to state 402
    COMMA    shift, and go to state 403


state 360

   75 array_body2: expr .

    $default  reduce using rule 75 (array_body2)


state 361

   73 Multi: Multi OPEN_ARR INT_VAL CLOSE_ARR .

    $default  reduce using rule 73 (Multi)


state 362

   99 p_type: error . type CLOSE_P
  106 parameter_list: parameter_list IDENTIFIER error . parameter

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 50
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 79

    type          go to state 123
    simple_type   go to state 73
    complex_type  go to state 74
    p_type        go to state 246
    parameter     go to state 404


state 363

  105 parameter_list: parameter_list IDENTIFIER SEMI_COLUMN . parameter

    error   shift, and go to state 77
    OPEN_P  shift, and go to state 79

    p_type     go to state 246
    parameter  go to state 405


state 364

  107 parameter_list: parameter_list IDENTIFIER parameter .

    $default  reduce using rule 107 (parameter_list)


state 365

  104 parameter_list: parameter_list SEMI_COLUMN parameter .

    $default  reduce using rule 104 (parameter_list)


state 366

  150 for_loop_header: FOR error SEMI_COMA logic_expr SEMI_COMA . expr CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 203
    OPEN_P      shift, and go to state 141
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    OPEN_ARR    shift, and go to state 149

    p_type        go to state 154
    expr          go to state 406
    assign_expr   go to state 163
    long_id       go to state 164
    simple_expr   go to state 165
    message_call  go to state 172


state 367

  146 for_loop_header: FOR error for_initializer SEMI_COMA logic_expr . SEMI_COMA expr CLOSE_P
  171 logic_expr: logic_expr . AND_AND logic_expr
  172           | logic_expr . OR_OR logic_expr

    SEMI_COMA  shift, and go to state 407
    AND_AND    shift, and go to state 266
    OR_OR      shift, and go to state 267


state 368

  159 for_initializer: INT IDENTIFIER error expr .

    $default  reduce using rule 159 (for_initializer)


state 369

  157 for_initializer: INT IDENTIFIER EQUAL expr .

    $default  reduce using rule 157 (for_initializer)


state 370

  170 logic_expr: OPEN_P logic_expr CLOSE_P .

    $default  reduce using rule 170 (logic_expr)


state 371

  149 for_loop_header: FOR SEMI_COMA logic_expr SEMI_COMA expr . CLOSE_P

    CLOSE_P  shift, and go to state 408


state 372

  156 for_loop_header: FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P .

    $default  reduce using rule 156 (for_loop_header)


state 373

  155 for_loop_header: FOR OPEN_P SEMI_COMA SEMI_COMA expr . CLOSE_P

    CLOSE_P  shift, and go to state 409


state 374

  147 for_loop_header: FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA . expr CLOSE_P
  148                | FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA . expr error
  154                | FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA . CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 203
    OPEN_P      shift, and go to state 141
    CLOSE_P     shift, and go to state 410
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    OPEN_ARR    shift, and go to state 149

    p_type        go to state 154
    expr          go to state 411
    assign_expr   go to state 163
    long_id       go to state 164
    simple_expr   go to state 165
    message_call  go to state 172


state 375

  151 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA . expr CLOSE_P
  153                | FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA . CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 203
    OPEN_P      shift, and go to state 141
    CLOSE_P     shift, and go to state 412
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    OPEN_ARR    shift, and go to state 149

    p_type        go to state 154
    expr          go to state 413
    assign_expr   go to state 163
    long_id       go to state 164
    simple_expr   go to state 165
    message_call  go to state 172


state 376

  143 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr . SEMI_COMA expr CLOSE_P
  144                | FOR OPEN_P for_initializer SEMI_COMA logic_expr . SEMI_COMA expr error
  152                | FOR OPEN_P for_initializer SEMI_COMA logic_expr . SEMI_COMA CLOSE_P
  171 logic_expr: logic_expr . AND_AND logic_expr
  172           | logic_expr . OR_OR logic_expr

    SEMI_COMA  shift, and go to state 414
    AND_AND    shift, and go to state 266
    OR_OR      shift, and go to state 267


state 377

  145 for_loop_header: FOR for_initializer SEMI_COMA logic_expr SEMI_COMA . expr CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 203
    OPEN_P      shift, and go to state 141
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    OPEN_ARR    shift, and go to state 149

    p_type        go to state 154
    expr          go to state 415
    assign_expr   go to state 163
    long_id       go to state 164
    simple_expr   go to state 165
    message_call  go to state 172


state 378

  239 argument: error . simple_expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 203
    OPEN_P      shift, and go to state 141
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    OPEN_ARR    shift, and go to state 149

    p_type        go to state 154
    long_id       go to state 194
    simple_expr   go to state 416
    message_call  go to state 172


state 379

  240 argument: IDENTIFIER . SEMI_COLUMN simple_expr
  241         | IDENTIFIER . simple_expr
  242         | IDENTIFIER . error simple_expr

    error        shift, and go to state 417
    IDENTIFIER   shift, and go to state 203
    SEMI_COLUMN  shift, and go to state 418
    OPEN_P       shift, and go to state 141
    STRING_VAL   shift, and go to state 142
    FLOAT_VAL    shift, and go to state 143
    CHAR_VAL     shift, and go to state 144
    INT_VAL      shift, and go to state 145
    OPEN_ARR     shift, and go to state 149

    p_type        go to state 154
    long_id       go to state 194
    simple_expr   go to state 419
    message_call  go to state 172


state 380

  238 argument: SEMI_COLUMN . simple_expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 203
    OPEN_P      shift, and go to state 141
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    OPEN_ARR    shift, and go to state 149

    p_type        go to state 154
    long_id       go to state 194
    simple_expr   go to state 420
    message_call  go to state 172


state 381

  235 message: IDENTIFIER SEMI_COLUMN argument_list .
  236 argument_list: argument_list . argument

    error        shift, and go to state 378
    IDENTIFIER   shift, and go to state 379
    SEMI_COLUMN  shift, and go to state 380

    CLOSE_ARR  reduce using rule 235 (message)

    argument  go to state 421


state 382

  237 argument_list: argument .

    $default  reduce using rule 237 (argument_list)


state 383

  215 switch: SWITCH error switch_statement CLOSE_P OPEN_S . switch_body CLOSE_S

    DEFAULT  shift, and go to state 422
    CASE     shift, and go to state 423

    switch_body  go to state 424


state 384

  216 switch: SWITCH OPEN_P switch_statement error OPEN_S . switch_body CLOSE_S

    DEFAULT  shift, and go to state 422
    CASE     shift, and go to state 423

    switch_body  go to state 425


state 385

  218 switch: SWITCH OPEN_P switch_statement CLOSE_P error . switch_body CLOSE_S

    DEFAULT  shift, and go to state 422
    CASE     shift, and go to state 423

    switch_body  go to state 426


state 386

  214 switch: SWITCH OPEN_P switch_statement CLOSE_P OPEN_S . switch_body CLOSE_S
  217       | SWITCH OPEN_P switch_statement CLOSE_P OPEN_S . switch_body error

    DEFAULT  shift, and go to state 422
    CASE     shift, and go to state 423

    switch_body  go to state 427


state 387

   60 variable_declarations: CONST type IDENTIFIER SEMI_COLUMN . simple_expr SEMI_COMA

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 203
    OPEN_P      shift, and go to state 141
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    OPEN_ARR    shift, and go to state 149

    p_type        go to state 154
    long_id       go to state 194
    simple_expr   go to state 428
    message_call  go to state 172


state 388

   58 variable_declarations: CONST type IDENTIFIER SEMI_COMA .

    $default  reduce using rule 58 (variable_declarations)


state 389

   52 structrule: STRUCT IDENTIFIER OPEN_S variable_declarations CLOSE_S ids_list SEMI_COMA .

    $default  reduce using rule 52 (structrule)


state 390

   57 variable_declarations: variable_declarations CONST type IDENTIFIER . SEMI_COMA
   59                      | variable_declarations CONST type IDENTIFIER . SEMI_COLUMN simple_expr SEMI_COMA

    SEMI_COLUMN  shift, and go to state 429
    SEMI_COMA    shift, and go to state 430


state 391

   56 variable_declarations: variable_declarations type IDENTIFIER SEMI_COLUMN . simple_expr SEMI_COMA

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 203
    OPEN_P      shift, and go to state 141
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    OPEN_ARR    shift, and go to state 149

    p_type        go to state 154
    long_id       go to state 194
    simple_expr   go to state 431
    message_call  go to state 172


state 392

   54 variable_declarations: variable_declarations type IDENTIFIER SEMI_COMA .

    $default  reduce using rule 54 (variable_declarations)


state 393

   55 variable_declarations: type IDENTIFIER SEMI_COLUMN simple_expr . SEMI_COMA
  197 simple_expr: simple_expr . PLUS simple_expr
  198            | simple_expr . MINUS simple_expr
  199            | simple_expr . MULTI simple_expr
  200            | simple_expr . DIV simple_expr

    SEMI_COMA  shift, and go to state 432
    PLUS       shift, and go to state 226
    MINUS      shift, and go to state 227
    MULTI      shift, and go to state 228
    DIV        shift, and go to state 229


state 394

   50 Enum: TYPEDEF ENUM OPEN_S ids_list CLOSE_S IDENTIFIER SEMI_COMA .

    $default  reduce using rule 50 (Enum)


state 395

   61 ArrayOne: type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR EQUAL OPEN_S . CLOSE_S SEMI_COMA
   63         | type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR EQUAL OPEN_S . array_body CLOSE_S SEMI_COMA

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 203
    CLOSE_S     shift, and go to state 433
    OPEN_P      shift, and go to state 141
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    OPEN_ARR    shift, and go to state 397

    array_body    go to state 434
    p_type        go to state 154
    expr          go to state 399
    assign_expr   go to state 163
    long_id       go to state 164
    simple_expr   go to state 165
    message_call  go to state 172


state 396

   72 Multi: OPEN_ARR INT_VAL CLOSE_ARR OPEN_ARR INT_VAL . CLOSE_ARR

    CLOSE_ARR  shift, and go to state 435


state 397

   68 array_body: OPEN_ARR . INT_VAL CLOSE_ARR EQUAL expr
  231 message_call: OPEN_ARR . sender message CLOSE_ARR

    IDENTIFIER  shift, and go to state 211
    INT_VAL     shift, and go to state 436
    OPEN_ARR    shift, and go to state 149

    message_call  go to state 212
    sender        go to state 213


state 398

   64 ArrayOne: type IDENTIFIER OPEN_ARR CLOSE_ARR EQUAL OPEN_S array_body . CLOSE_S SEMI_COMA
   65 array_body: array_body . COMMA expr
   67           | array_body . COMMA OPEN_ARR INT_VAL CLOSE_ARR EQUAL expr

    CLOSE_S  shift, and go to state 437
    COMMA    shift, and go to state 438


state 399

   66 array_body: expr .

    $default  reduce using rule 66 (array_body)


state 400

   65 array_body: array_body . COMMA expr
   67           | array_body . COMMA OPEN_ARR INT_VAL CLOSE_ARR EQUAL expr
   74 array_body2: OPEN_S array_body . CLOSE_S

    CLOSE_S  shift, and go to state 439
    COMMA    shift, and go to state 438


state 401

   69 ArrayN: type IDENTIFIER Multi EQUAL OPEN_S CLOSE_S SEMI_COMA .

    $default  reduce using rule 69 (ArrayN)


state 402

   71 ArrayN: type IDENTIFIER Multi EQUAL OPEN_S array_body2 CLOSE_S . SEMI_COMA

    SEMI_COMA  shift, and go to state 440


state 403

   76 array_body2: array_body2 COMMA . OPEN_S array_body CLOSE_S
   77            | array_body2 COMMA . expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 203
    OPEN_S      shift, and go to state 441
    OPEN_P      shift, and go to state 141
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    OPEN_ARR    shift, and go to state 149

    p_type        go to state 154
    expr          go to state 442
    assign_expr   go to state 163
    long_id       go to state 164
    simple_expr   go to state 165
    message_call  go to state 172


state 404

  106 parameter_list: parameter_list IDENTIFIER error parameter .

    $default  reduce using rule 106 (parameter_list)


state 405

  105 parameter_list: parameter_list IDENTIFIER SEMI_COLUMN parameter .

    $default  reduce using rule 105 (parameter_list)


state 406

  150 for_loop_header: FOR error SEMI_COMA logic_expr SEMI_COMA expr . CLOSE_P

    CLOSE_P  shift, and go to state 443


state 407

  146 for_loop_header: FOR error for_initializer SEMI_COMA logic_expr SEMI_COMA . expr CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 203
    OPEN_P      shift, and go to state 141
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    OPEN_ARR    shift, and go to state 149

    p_type        go to state 154
    expr          go to state 444
    assign_expr   go to state 163
    long_id       go to state 164
    simple_expr   go to state 165
    message_call  go to state 172


state 408

  149 for_loop_header: FOR SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 149 (for_loop_header)


state 409

  155 for_loop_header: FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 155 (for_loop_header)


state 410

  154 for_loop_header: FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA CLOSE_P .

    $default  reduce using rule 154 (for_loop_header)


state 411

  147 for_loop_header: FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr . CLOSE_P
  148                | FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr . error

    error    shift, and go to state 445
    CLOSE_P  shift, and go to state 446


state 412

  153 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P .

    $default  reduce using rule 153 (for_loop_header)


state 413

  151 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr . CLOSE_P

    CLOSE_P  shift, and go to state 447


state 414

  143 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA . expr CLOSE_P
  144                | FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA . expr error
  152                | FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA . CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 203
    OPEN_P      shift, and go to state 141
    CLOSE_P     shift, and go to state 448
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    OPEN_ARR    shift, and go to state 149

    p_type        go to state 154
    expr          go to state 449
    assign_expr   go to state 163
    long_id       go to state 164
    simple_expr   go to state 165
    message_call  go to state 172


state 415

  145 for_loop_header: FOR for_initializer SEMI_COMA logic_expr SEMI_COMA expr . CLOSE_P

    CLOSE_P  shift, and go to state 450


state 416

  197 simple_expr: simple_expr . PLUS simple_expr
  198            | simple_expr . MINUS simple_expr
  199            | simple_expr . MULTI simple_expr
  200            | simple_expr . DIV simple_expr
  239 argument: error simple_expr .

    PLUS   shift, and go to state 226
    MINUS  shift, and go to state 227
    MULTI  shift, and go to state 228
    DIV    shift, and go to state 229

    $default  reduce using rule 239 (argument)


state 417

   99 p_type: error . type CLOSE_P
  242 argument: IDENTIFIER error . simple_expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 139
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 141
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    OPEN_ARR    shift, and go to state 149

    type          go to state 123
    simple_type   go to state 73
    complex_type  go to state 74
    p_type        go to state 154
    long_id       go to state 194
    simple_expr   go to state 451
    message_call  go to state 172


state 418

  240 argument: IDENTIFIER SEMI_COLUMN . simple_expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 203
    OPEN_P      shift, and go to state 141
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    OPEN_ARR    shift, and go to state 149

    p_type        go to state 154
    long_id       go to state 194
    simple_expr   go to state 452
    message_call  go to state 172


state 419

  197 simple_expr: simple_expr . PLUS simple_expr
  198            | simple_expr . MINUS simple_expr
  199            | simple_expr . MULTI simple_expr
  200            | simple_expr . DIV simple_expr
  241 argument: IDENTIFIER simple_expr .

    PLUS   shift, and go to state 226
    MINUS  shift, and go to state 227
    MULTI  shift, and go to state 228
    DIV    shift, and go to state 229

    $default  reduce using rule 241 (argument)


state 420

  197 simple_expr: simple_expr . PLUS simple_expr
  198            | simple_expr . MINUS simple_expr
  199            | simple_expr . MULTI simple_expr
  200            | simple_expr . DIV simple_expr
  238 argument: SEMI_COLUMN simple_expr .

    PLUS   shift, and go to state 226
    MINUS  shift, and go to state 227
    MULTI  shift, and go to state 228
    DIV    shift, and go to state 229

    $default  reduce using rule 238 (argument)


state 421

  236 argument_list: argument_list argument .

    $default  reduce using rule 236 (argument_list)


state 422

  221 switch_body: DEFAULT . SEMI_COLUMN statement BREAK SEMI_COMA
  222            | DEFAULT . SEMI_COLUMN statement error SEMI_COMA

    SEMI_COLUMN  shift, and go to state 453


state 423

  219 switch_body: CASE . OPEN_P case_statement CLOSE_P SEMI_COLUMN statement BREAK SEMI_COMA switch_body
  220            | CASE . OPEN_P case_statement CLOSE_P SEMI_COLUMN statement error SEMI_COMA switch_body

    OPEN_P  shift, and go to state 454


state 424

  215 switch: SWITCH error switch_statement CLOSE_P OPEN_S switch_body . CLOSE_S

    CLOSE_S  shift, and go to state 455


state 425

  216 switch: SWITCH OPEN_P switch_statement error OPEN_S switch_body . CLOSE_S

    CLOSE_S  shift, and go to state 456


state 426

  218 switch: SWITCH OPEN_P switch_statement CLOSE_P error switch_body . CLOSE_S

    CLOSE_S  shift, and go to state 457


state 427

  214 switch: SWITCH OPEN_P switch_statement CLOSE_P OPEN_S switch_body . CLOSE_S
  217       | SWITCH OPEN_P switch_statement CLOSE_P OPEN_S switch_body . error

    error    shift, and go to state 458
    CLOSE_S  shift, and go to state 459


state 428

   60 variable_declarations: CONST type IDENTIFIER SEMI_COLUMN simple_expr . SEMI_COMA
  197 simple_expr: simple_expr . PLUS simple_expr
  198            | simple_expr . MINUS simple_expr
  199            | simple_expr . MULTI simple_expr
  200            | simple_expr . DIV simple_expr

    SEMI_COMA  shift, and go to state 460
    PLUS       shift, and go to state 226
    MINUS      shift, and go to state 227
    MULTI      shift, and go to state 228
    DIV        shift, and go to state 229


state 429

   59 variable_declarations: variable_declarations CONST type IDENTIFIER SEMI_COLUMN . simple_expr SEMI_COMA

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 203
    OPEN_P      shift, and go to state 141
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    OPEN_ARR    shift, and go to state 149

    p_type        go to state 154
    long_id       go to state 194
    simple_expr   go to state 461
    message_call  go to state 172


state 430

   57 variable_declarations: variable_declarations CONST type IDENTIFIER SEMI_COMA .

    $default  reduce using rule 57 (variable_declarations)


state 431

   56 variable_declarations: variable_declarations type IDENTIFIER SEMI_COLUMN simple_expr . SEMI_COMA
  197 simple_expr: simple_expr . PLUS simple_expr
  198            | simple_expr . MINUS simple_expr
  199            | simple_expr . MULTI simple_expr
  200            | simple_expr . DIV simple_expr

    SEMI_COMA  shift, and go to state 462
    PLUS       shift, and go to state 226
    MINUS      shift, and go to state 227
    MULTI      shift, and go to state 228
    DIV        shift, and go to state 229


state 432

   55 variable_declarations: type IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA .

    $default  reduce using rule 55 (variable_declarations)


state 433

   61 ArrayOne: type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR EQUAL OPEN_S CLOSE_S . SEMI_COMA

    SEMI_COMA  shift, and go to state 463


state 434

   63 ArrayOne: type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR EQUAL OPEN_S array_body . CLOSE_S SEMI_COMA
   65 array_body: array_body . COMMA expr
   67           | array_body . COMMA OPEN_ARR INT_VAL CLOSE_ARR EQUAL expr

    CLOSE_S  shift, and go to state 464
    COMMA    shift, and go to state 438


state 435

   72 Multi: OPEN_ARR INT_VAL CLOSE_ARR OPEN_ARR INT_VAL CLOSE_ARR .

    $default  reduce using rule 72 (Multi)


state 436

   68 array_body: OPEN_ARR INT_VAL . CLOSE_ARR EQUAL expr

    CLOSE_ARR  shift, and go to state 465


state 437

   64 ArrayOne: type IDENTIFIER OPEN_ARR CLOSE_ARR EQUAL OPEN_S array_body CLOSE_S . SEMI_COMA

    SEMI_COMA  shift, and go to state 466


state 438

   65 array_body: array_body COMMA . expr
   67           | array_body COMMA . OPEN_ARR INT_VAL CLOSE_ARR EQUAL expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 203
    OPEN_P      shift, and go to state 141
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    OPEN_ARR    shift, and go to state 467

    p_type        go to state 154
    expr          go to state 468
    assign_expr   go to state 163
    long_id       go to state 164
    simple_expr   go to state 165
    message_call  go to state 172


state 439

   74 array_body2: OPEN_S array_body CLOSE_S .

    $default  reduce using rule 74 (array_body2)


state 440

   71 ArrayN: type IDENTIFIER Multi EQUAL OPEN_S array_body2 CLOSE_S SEMI_COMA .

    $default  reduce using rule 71 (ArrayN)


state 441

   76 array_body2: array_body2 COMMA OPEN_S . array_body CLOSE_S

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 203
    OPEN_P      shift, and go to state 141
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    OPEN_ARR    shift, and go to state 397

    array_body    go to state 469
    p_type        go to state 154
    expr          go to state 399
    assign_expr   go to state 163
    long_id       go to state 164
    simple_expr   go to state 165
    message_call  go to state 172


state 442

   77 array_body2: array_body2 COMMA expr .

    $default  reduce using rule 77 (array_body2)


state 443

  150 for_loop_header: FOR error SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 150 (for_loop_header)


state 444

  146 for_loop_header: FOR error for_initializer SEMI_COMA logic_expr SEMI_COMA expr . CLOSE_P

    CLOSE_P  shift, and go to state 470


state 445

  148 for_loop_header: FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr error .

    $default  reduce using rule 148 (for_loop_header)


state 446

  147 for_loop_header: FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 147 (for_loop_header)


state 447

  151 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 151 (for_loop_header)


state 448

  152 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P .

    $default  reduce using rule 152 (for_loop_header)


state 449

  143 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr . CLOSE_P
  144                | FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr . error

    error    shift, and go to state 471
    CLOSE_P  shift, and go to state 472


state 450

  145 for_loop_header: FOR for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 145 (for_loop_header)


state 451

  197 simple_expr: simple_expr . PLUS simple_expr
  198            | simple_expr . MINUS simple_expr
  199            | simple_expr . MULTI simple_expr
  200            | simple_expr . DIV simple_expr
  242 argument: IDENTIFIER error simple_expr .

    PLUS   shift, and go to state 226
    MINUS  shift, and go to state 227
    MULTI  shift, and go to state 228
    DIV    shift, and go to state 229

    $default  reduce using rule 242 (argument)


state 452

  197 simple_expr: simple_expr . PLUS simple_expr
  198            | simple_expr . MINUS simple_expr
  199            | simple_expr . MULTI simple_expr
  200            | simple_expr . DIV simple_expr
  240 argument: IDENTIFIER SEMI_COLUMN simple_expr .

    PLUS   shift, and go to state 226
    MINUS  shift, and go to state 227
    MULTI  shift, and go to state 228
    DIV    shift, and go to state 229

    $default  reduce using rule 240 (argument)


state 453

  221 switch_body: DEFAULT SEMI_COLUMN . statement BREAK SEMI_COMA
  222            | DEFAULT SEMI_COLUMN . statement error SEMI_COMA

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 139
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    CONST       shift, and go to state 58
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 141
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    FOR         shift, and go to state 146
    WHILE       shift, and go to state 147
    IF          shift, and go to state 148
    OPEN_ARR    shift, and go to state 149
    RETURN      shift, and go to state 150
    DO          shift, and go to state 151
    SWITCH      shift, and go to state 152
    STRUCT      shift, and go to state 60
    TYPEDEF     shift, and go to state 61
    ENUM        shift, and go to state 62

    OPEN_S  reduce using rule 134 (@2)

    variable_declaration   go to state 153
    Enum                   go to state 68
    structrule             go to state 69
    ArrayOne               go to state 70
    ArrayN                 go to state 71
    type                   go to state 72
    simple_type            go to state 73
    complex_type           go to state 74
    p_type                 go to state 154
    statement              go to state 473
    @2                     go to state 157
    return_statement       go to state 158
    loop_statement         go to state 159
    for_loop               go to state 160
    for_loop_header        go to state 161
    expr                   go to state 162
    assign_expr            go to state 163
    long_id                go to state 164
    simple_expr            go to state 165
    while_loop             go to state 166
    while_loop_header      go to state 167
    do_while_loop          go to state 168
    conditional_statement  go to state 169
    switch                 go to state 170
    if_header              go to state 171
    message_call           go to state 172


state 454

  219 switch_body: CASE OPEN_P . case_statement CLOSE_P SEMI_COLUMN statement BREAK SEMI_COMA switch_body
  220            | CASE OPEN_P . case_statement CLOSE_P SEMI_COLUMN statement error SEMI_COMA switch_body

    error       shift, and go to state 474
    IDENTIFIER  shift, and go to state 203
    OPEN_P      shift, and go to state 475
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    NOT_EQUAL   shift, and go to state 476
    OPEN_ARR    shift, and go to state 149

    p_type          go to state 154
    logic_expr2     go to state 477
    expr2           go to state 478
    long_id         go to state 194
    simple_expr     go to state 479
    case_statement  go to state 480
    message_call    go to state 172


state 455

  215 switch: SWITCH error switch_statement CLOSE_P OPEN_S switch_body CLOSE_S .

    $default  reduce using rule 215 (switch)


state 456

  216 switch: SWITCH OPEN_P switch_statement error OPEN_S switch_body CLOSE_S .

    $default  reduce using rule 216 (switch)


state 457

  218 switch: SWITCH OPEN_P switch_statement CLOSE_P error switch_body CLOSE_S .

    $default  reduce using rule 218 (switch)


state 458

  217 switch: SWITCH OPEN_P switch_statement CLOSE_P OPEN_S switch_body error .

    $default  reduce using rule 217 (switch)


state 459

  214 switch: SWITCH OPEN_P switch_statement CLOSE_P OPEN_S switch_body CLOSE_S .

    $default  reduce using rule 214 (switch)


state 460

   60 variable_declarations: CONST type IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA .

    $default  reduce using rule 60 (variable_declarations)


state 461

   59 variable_declarations: variable_declarations CONST type IDENTIFIER SEMI_COLUMN simple_expr . SEMI_COMA
  197 simple_expr: simple_expr . PLUS simple_expr
  198            | simple_expr . MINUS simple_expr
  199            | simple_expr . MULTI simple_expr
  200            | simple_expr . DIV simple_expr

    SEMI_COMA  shift, and go to state 481
    PLUS       shift, and go to state 226
    MINUS      shift, and go to state 227
    MULTI      shift, and go to state 228
    DIV        shift, and go to state 229


state 462

   56 variable_declarations: variable_declarations type IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA .

    $default  reduce using rule 56 (variable_declarations)


state 463

   61 ArrayOne: type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR EQUAL OPEN_S CLOSE_S SEMI_COMA .

    $default  reduce using rule 61 (ArrayOne)


state 464

   63 ArrayOne: type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR EQUAL OPEN_S array_body CLOSE_S . SEMI_COMA

    SEMI_COMA  shift, and go to state 482


state 465

   68 array_body: OPEN_ARR INT_VAL CLOSE_ARR . EQUAL expr

    EQUAL  shift, and go to state 483


state 466

   64 ArrayOne: type IDENTIFIER OPEN_ARR CLOSE_ARR EQUAL OPEN_S array_body CLOSE_S SEMI_COMA .

    $default  reduce using rule 64 (ArrayOne)


state 467

   67 array_body: array_body COMMA OPEN_ARR . INT_VAL CLOSE_ARR EQUAL expr
  231 message_call: OPEN_ARR . sender message CLOSE_ARR

    IDENTIFIER  shift, and go to state 211
    INT_VAL     shift, and go to state 484
    OPEN_ARR    shift, and go to state 149

    message_call  go to state 212
    sender        go to state 213


state 468

   65 array_body: array_body COMMA expr .

    $default  reduce using rule 65 (array_body)


state 469

   65 array_body: array_body . COMMA expr
   67           | array_body . COMMA OPEN_ARR INT_VAL CLOSE_ARR EQUAL expr
   76 array_body2: array_body2 COMMA OPEN_S array_body . CLOSE_S

    CLOSE_S  shift, and go to state 485
    COMMA    shift, and go to state 438


state 470

  146 for_loop_header: FOR error for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 146 (for_loop_header)


state 471

  144 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr error .

    $default  reduce using rule 144 (for_loop_header)


state 472

  143 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 143 (for_loop_header)


state 473

  221 switch_body: DEFAULT SEMI_COLUMN statement . BREAK SEMI_COMA
  222            | DEFAULT SEMI_COLUMN statement . error SEMI_COMA

    error  shift, and go to state 486
    BREAK  shift, and go to state 487


state 474

   99 p_type: error . type CLOSE_P
  184 logic_expr2: error . expr2
  186            | error . logic_expr2 CLOSE_P

    error       shift, and go to state 474
    IDENTIFIER  shift, and go to state 139
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 475
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    NOT_EQUAL   shift, and go to state 476
    OPEN_ARR    shift, and go to state 149

    type          go to state 123
    simple_type   go to state 73
    complex_type  go to state 74
    p_type        go to state 154
    logic_expr2   go to state 488
    expr2         go to state 489
    long_id       go to state 194
    simple_expr   go to state 479
    message_call  go to state 172


state 475

   98 p_type: OPEN_P . type CLOSE_P
  100       | OPEN_P . type error
  181 logic_expr2: OPEN_P . logic_expr2 CLOSE_P
  185            | OPEN_P . logic_expr2 error
  201 simple_expr: OPEN_P . simple_expr CLOSE_P

    error       shift, and go to state 474
    IDENTIFIER  shift, and go to state 139
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 475
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    NOT_EQUAL   shift, and go to state 476
    OPEN_ARR    shift, and go to state 149

    type          go to state 125
    simple_type   go to state 73
    complex_type  go to state 74
    p_type        go to state 154
    logic_expr2   go to state 490
    expr2         go to state 491
    long_id       go to state 194
    simple_expr   go to state 492
    message_call  go to state 172


state 476

  180 logic_expr2: NOT_EQUAL . expr2

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 203
    OPEN_P      shift, and go to state 141
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    OPEN_ARR    shift, and go to state 149

    p_type        go to state 154
    expr2         go to state 493
    long_id       go to state 194
    simple_expr   go to state 479
    message_call  go to state 172


state 477

  182 logic_expr2: logic_expr2 . AND_AND logic_expr2
  183            | logic_expr2 . OR_OR logic_expr2
  225 case_statement: logic_expr2 .

    AND_AND  shift, and go to state 494
    OR_OR    shift, and go to state 495

    $default  reduce using rule 225 (case_statement)


state 478

  175 logic_expr2: expr2 . LESS_THAN expr2
  176            | expr2 . MORE_THAN expr2
  177            | expr2 . LESS_OR_EQUAL expr2
  178            | expr2 . MORE_OR_EQUAL expr2
  179            | expr2 . EQUAL_EQUAL expr2
  226 case_statement: expr2 .

    LESS_THAN      shift, and go to state 496
    MORE_THAN      shift, and go to state 497
    LESS_OR_EQUAL  shift, and go to state 498
    MORE_OR_EQUAL  shift, and go to state 499
    EQUAL_EQUAL    shift, and go to state 500

    $default  reduce using rule 226 (case_statement)


state 479

  187 expr2: simple_expr .
  197 simple_expr: simple_expr . PLUS simple_expr
  198            | simple_expr . MINUS simple_expr
  199            | simple_expr . MULTI simple_expr
  200            | simple_expr . DIV simple_expr

    PLUS   shift, and go to state 226
    MINUS  shift, and go to state 227
    MULTI  shift, and go to state 228
    DIV    shift, and go to state 229

    $default  reduce using rule 187 (expr2)


state 480

  219 switch_body: CASE OPEN_P case_statement . CLOSE_P SEMI_COLUMN statement BREAK SEMI_COMA switch_body
  220            | CASE OPEN_P case_statement . CLOSE_P SEMI_COLUMN statement error SEMI_COMA switch_body

    CLOSE_P  shift, and go to state 501


state 481

   59 variable_declarations: variable_declarations CONST type IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA .

    $default  reduce using rule 59 (variable_declarations)


state 482

   63 ArrayOne: type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR EQUAL OPEN_S array_body CLOSE_S SEMI_COMA .

    $default  reduce using rule 63 (ArrayOne)


state 483

   68 array_body: OPEN_ARR INT_VAL CLOSE_ARR EQUAL . expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 203
    OPEN_P      shift, and go to state 141
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    OPEN_ARR    shift, and go to state 149

    p_type        go to state 154
    expr          go to state 502
    assign_expr   go to state 163
    long_id       go to state 164
    simple_expr   go to state 165
    message_call  go to state 172


state 484

   67 array_body: array_body COMMA OPEN_ARR INT_VAL . CLOSE_ARR EQUAL expr

    CLOSE_ARR  shift, and go to state 503


state 485

   76 array_body2: array_body2 COMMA OPEN_S array_body CLOSE_S .

    $default  reduce using rule 76 (array_body2)


state 486

  222 switch_body: DEFAULT SEMI_COLUMN statement error . SEMI_COMA

    SEMI_COMA  shift, and go to state 504


state 487

  221 switch_body: DEFAULT SEMI_COLUMN statement BREAK . SEMI_COMA

    SEMI_COMA  shift, and go to state 505


state 488

  182 logic_expr2: logic_expr2 . AND_AND logic_expr2
  183            | logic_expr2 . OR_OR logic_expr2
  186            | error logic_expr2 . CLOSE_P

    CLOSE_P  shift, and go to state 506
    AND_AND  shift, and go to state 494
    OR_OR    shift, and go to state 495


state 489

  175 logic_expr2: expr2 . LESS_THAN expr2
  176            | expr2 . MORE_THAN expr2
  177            | expr2 . LESS_OR_EQUAL expr2
  178            | expr2 . MORE_OR_EQUAL expr2
  179            | expr2 . EQUAL_EQUAL expr2
  184            | error expr2 .

    LESS_THAN      shift, and go to state 496
    MORE_THAN      shift, and go to state 497
    LESS_OR_EQUAL  shift, and go to state 498
    MORE_OR_EQUAL  shift, and go to state 499
    EQUAL_EQUAL    shift, and go to state 500

    $default  reduce using rule 184 (logic_expr2)


state 490

  181 logic_expr2: OPEN_P logic_expr2 . CLOSE_P
  182            | logic_expr2 . AND_AND logic_expr2
  183            | logic_expr2 . OR_OR logic_expr2
  185            | OPEN_P logic_expr2 . error

    error    shift, and go to state 507
    CLOSE_P  shift, and go to state 508
    AND_AND  shift, and go to state 494
    OR_OR    shift, and go to state 495


state 491

  175 logic_expr2: expr2 . LESS_THAN expr2
  176            | expr2 . MORE_THAN expr2
  177            | expr2 . LESS_OR_EQUAL expr2
  178            | expr2 . MORE_OR_EQUAL expr2
  179            | expr2 . EQUAL_EQUAL expr2

    LESS_THAN      shift, and go to state 496
    MORE_THAN      shift, and go to state 497
    LESS_OR_EQUAL  shift, and go to state 498
    MORE_OR_EQUAL  shift, and go to state 499
    EQUAL_EQUAL    shift, and go to state 500


state 492

  187 expr2: simple_expr .
  197 simple_expr: simple_expr . PLUS simple_expr
  198            | simple_expr . MINUS simple_expr
  199            | simple_expr . MULTI simple_expr
  200            | simple_expr . DIV simple_expr
  201            | OPEN_P simple_expr . CLOSE_P

    PLUS     shift, and go to state 226
    MINUS    shift, and go to state 227
    CLOSE_P  shift, and go to state 249
    MULTI    shift, and go to state 228
    DIV      shift, and go to state 229

    $default  reduce using rule 187 (expr2)


state 493

  180 logic_expr2: NOT_EQUAL expr2 .

    $default  reduce using rule 180 (logic_expr2)


state 494

  182 logic_expr2: logic_expr2 AND_AND . logic_expr2

    error       shift, and go to state 474
    IDENTIFIER  shift, and go to state 203
    OPEN_P      shift, and go to state 475
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    NOT_EQUAL   shift, and go to state 476
    OPEN_ARR    shift, and go to state 149

    p_type        go to state 154
    logic_expr2   go to state 509
    expr2         go to state 491
    long_id       go to state 194
    simple_expr   go to state 479
    message_call  go to state 172


state 495

  183 logic_expr2: logic_expr2 OR_OR . logic_expr2

    error       shift, and go to state 474
    IDENTIFIER  shift, and go to state 203
    OPEN_P      shift, and go to state 475
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    NOT_EQUAL   shift, and go to state 476
    OPEN_ARR    shift, and go to state 149

    p_type        go to state 154
    logic_expr2   go to state 510
    expr2         go to state 491
    long_id       go to state 194
    simple_expr   go to state 479
    message_call  go to state 172


state 496

  175 logic_expr2: expr2 LESS_THAN . expr2

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 203
    OPEN_P      shift, and go to state 141
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    OPEN_ARR    shift, and go to state 149

    p_type        go to state 154
    expr2         go to state 511
    long_id       go to state 194
    simple_expr   go to state 479
    message_call  go to state 172


state 497

  176 logic_expr2: expr2 MORE_THAN . expr2

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 203
    OPEN_P      shift, and go to state 141
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    OPEN_ARR    shift, and go to state 149

    p_type        go to state 154
    expr2         go to state 512
    long_id       go to state 194
    simple_expr   go to state 479
    message_call  go to state 172


state 498

  177 logic_expr2: expr2 LESS_OR_EQUAL . expr2

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 203
    OPEN_P      shift, and go to state 141
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    OPEN_ARR    shift, and go to state 149

    p_type        go to state 154
    expr2         go to state 513
    long_id       go to state 194
    simple_expr   go to state 479
    message_call  go to state 172


state 499

  178 logic_expr2: expr2 MORE_OR_EQUAL . expr2

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 203
    OPEN_P      shift, and go to state 141
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    OPEN_ARR    shift, and go to state 149

    p_type        go to state 154
    expr2         go to state 514
    long_id       go to state 194
    simple_expr   go to state 479
    message_call  go to state 172


state 500

  179 logic_expr2: expr2 EQUAL_EQUAL . expr2

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 203
    OPEN_P      shift, and go to state 141
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    OPEN_ARR    shift, and go to state 149

    p_type        go to state 154
    expr2         go to state 515
    long_id       go to state 194
    simple_expr   go to state 479
    message_call  go to state 172


state 501

  219 switch_body: CASE OPEN_P case_statement CLOSE_P . SEMI_COLUMN statement BREAK SEMI_COMA switch_body
  220            | CASE OPEN_P case_statement CLOSE_P . SEMI_COLUMN statement error SEMI_COMA switch_body

    SEMI_COLUMN  shift, and go to state 516


state 502

   68 array_body: OPEN_ARR INT_VAL CLOSE_ARR EQUAL expr .

    $default  reduce using rule 68 (array_body)


state 503

   67 array_body: array_body COMMA OPEN_ARR INT_VAL CLOSE_ARR . EQUAL expr

    EQUAL  shift, and go to state 517


state 504

  222 switch_body: DEFAULT SEMI_COLUMN statement error SEMI_COMA .

    $default  reduce using rule 222 (switch_body)


state 505

  221 switch_body: DEFAULT SEMI_COLUMN statement BREAK SEMI_COMA .

    $default  reduce using rule 221 (switch_body)


state 506

  186 logic_expr2: error logic_expr2 CLOSE_P .

    $default  reduce using rule 186 (logic_expr2)


state 507

  185 logic_expr2: OPEN_P logic_expr2 error .

    $default  reduce using rule 185 (logic_expr2)


state 508

  181 logic_expr2: OPEN_P logic_expr2 CLOSE_P .

    $default  reduce using rule 181 (logic_expr2)


state 509

  182 logic_expr2: logic_expr2 . AND_AND logic_expr2
  182            | logic_expr2 AND_AND logic_expr2 .
  183            | logic_expr2 . OR_OR logic_expr2

    AND_AND  error (nonassociative)
    OR_OR    error (nonassociative)

    $default  reduce using rule 182 (logic_expr2)


state 510

  182 logic_expr2: logic_expr2 . AND_AND logic_expr2
  183            | logic_expr2 . OR_OR logic_expr2
  183            | logic_expr2 OR_OR logic_expr2 .

    AND_AND  error (nonassociative)
    OR_OR    error (nonassociative)

    $default  reduce using rule 183 (logic_expr2)


state 511

  175 logic_expr2: expr2 LESS_THAN expr2 .

    $default  reduce using rule 175 (logic_expr2)


state 512

  176 logic_expr2: expr2 MORE_THAN expr2 .

    $default  reduce using rule 176 (logic_expr2)


state 513

  177 logic_expr2: expr2 LESS_OR_EQUAL expr2 .

    $default  reduce using rule 177 (logic_expr2)


state 514

  178 logic_expr2: expr2 MORE_OR_EQUAL expr2 .

    $default  reduce using rule 178 (logic_expr2)


state 515

  179 logic_expr2: expr2 EQUAL_EQUAL expr2 .

    $default  reduce using rule 179 (logic_expr2)


state 516

  219 switch_body: CASE OPEN_P case_statement CLOSE_P SEMI_COLUMN . statement BREAK SEMI_COMA switch_body
  220            | CASE OPEN_P case_statement CLOSE_P SEMI_COLUMN . statement error SEMI_COMA switch_body

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 139
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    CONST       shift, and go to state 58
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 141
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    FOR         shift, and go to state 146
    WHILE       shift, and go to state 147
    IF          shift, and go to state 148
    OPEN_ARR    shift, and go to state 149
    RETURN      shift, and go to state 150
    DO          shift, and go to state 151
    SWITCH      shift, and go to state 152
    STRUCT      shift, and go to state 60
    TYPEDEF     shift, and go to state 61
    ENUM        shift, and go to state 62

    OPEN_S  reduce using rule 134 (@2)

    variable_declaration   go to state 153
    Enum                   go to state 68
    structrule             go to state 69
    ArrayOne               go to state 70
    ArrayN                 go to state 71
    type                   go to state 72
    simple_type            go to state 73
    complex_type           go to state 74
    p_type                 go to state 154
    statement              go to state 518
    @2                     go to state 157
    return_statement       go to state 158
    loop_statement         go to state 159
    for_loop               go to state 160
    for_loop_header        go to state 161
    expr                   go to state 162
    assign_expr            go to state 163
    long_id                go to state 164
    simple_expr            go to state 165
    while_loop             go to state 166
    while_loop_header      go to state 167
    do_while_loop          go to state 168
    conditional_statement  go to state 169
    switch                 go to state 170
    if_header              go to state 171
    message_call           go to state 172


state 517

   67 array_body: array_body COMMA OPEN_ARR INT_VAL CLOSE_ARR EQUAL . expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 203
    OPEN_P      shift, and go to state 141
    STRING_VAL  shift, and go to state 142
    FLOAT_VAL   shift, and go to state 143
    CHAR_VAL    shift, and go to state 144
    INT_VAL     shift, and go to state 145
    OPEN_ARR    shift, and go to state 149

    p_type        go to state 154
    expr          go to state 519
    assign_expr   go to state 163
    long_id       go to state 164
    simple_expr   go to state 165
    message_call  go to state 172


state 518

  219 switch_body: CASE OPEN_P case_statement CLOSE_P SEMI_COLUMN statement . BREAK SEMI_COMA switch_body
  220            | CASE OPEN_P case_statement CLOSE_P SEMI_COLUMN statement . error SEMI_COMA switch_body

    error  shift, and go to state 520
    BREAK  shift, and go to state 521


state 519

   67 array_body: array_body COMMA OPEN_ARR INT_VAL CLOSE_ARR EQUAL expr .

    $default  reduce using rule 67 (array_body)


state 520

  220 switch_body: CASE OPEN_P case_statement CLOSE_P SEMI_COLUMN statement error . SEMI_COMA switch_body

    SEMI_COMA  shift, and go to state 522


state 521

  219 switch_body: CASE OPEN_P case_statement CLOSE_P SEMI_COLUMN statement BREAK . SEMI_COMA switch_body

    SEMI_COMA  shift, and go to state 523


state 522

  220 switch_body: CASE OPEN_P case_statement CLOSE_P SEMI_COLUMN statement error SEMI_COMA . switch_body

    DEFAULT  shift, and go to state 422
    CASE     shift, and go to state 423

    switch_body  go to state 524


state 523

  219 switch_body: CASE OPEN_P case_statement CLOSE_P SEMI_COLUMN statement BREAK SEMI_COMA . switch_body

    DEFAULT  shift, and go to state 422
    CASE     shift, and go to state 423

    switch_body  go to state 525


state 524

  220 switch_body: CASE OPEN_P case_statement CLOSE_P SEMI_COLUMN statement error SEMI_COMA switch_body .

    $default  reduce using rule 220 (switch_body)


state 525

  219 switch_body: CASE OPEN_P case_statement CLOSE_P SEMI_COLUMN statement BREAK SEMI_COMA switch_body .

    $default  reduce using rule 219 (switch_body)
